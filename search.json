[{"title":"Andorid Studio 安装报错 解决","url":"/2020/03/10/逆向/androidstudio安装报错/","content":"\n\n\n# Andorid Studio 安装报错 解决\n\n\n\n## 小记\n\n安装了一下午的AndroidStudio 一直报错，安装不上sdk 实在头疼，查到资料改个hosts就搞定了，舒服\n\n\n\n将这两个写入`c:\\users\\你电脑的名字\\drivers\\etc\\hosts`中 即可解决 不挂代理轻松安装sdk\n\n```\n203.208.43.101 dl-ssl.google.com\n203.208.43.101 dl.google.com\n```\n\n\n\n","tags":["逆向"],"categories":["Reverse"]},{"title":"python第一课 数据结构和算法","url":"/2020/02/27/编程/python/python第一课 数据结构和算法/","content":"\n# python第一课 数据结构和算法\n\n> 注： 本文是对照https://python3-cookbook.readthedocs.io/ 学习 总结笔记 \n\n\n\n## 1.1  解压序列复制给多个变量\n\n**问题**\n\n现在有一个包含 N 个元素的元组或者是序列，怎样将它里面的值解压后同时赋值给 N 个变量？\n\n**解决方案**\n\n**元组**：元组使用小括号与列表非常相似，创建元组只需要 `tup = (1,2,3,4,5,6)`,通过逗隔开即可；查看当前变量是否属于元组可以通过`type(tup)` 来获取变量类型；并且 元组也可以通过 tup = \"a\",\"b\",\"c\" 这样来实现；元组只包含一个元素，需要在元素后面添加逗号，否则会被当做运算符使用。\n\n**序列**：python中的序列一般指 字符串，列表，元组。python在序列中可以进行索引、切片、加、乘、检查成员、确定最大最小元素，\n\n**字符串**： python的字符串我在介绍中也说了， 通过 变量 等于 用引号包括的值即可，例如：\n\nvar = \"St0n5\"\n\n**列表**： 和元组类似，千万不要混淆了， 通过 list = ['ceshi1','ceshi2'] 来创建\n\n\n\n接下来开始解决问题\n\n```\n# 将p赋值给变量，注意变量的数量要和序列的数量相同\n# python 可以通过多变量赋值实现 同时对多个变量的赋值\n>>> p =(4,5)\n>>> x,y=p\n>>> x\n4\n>>> y\n5\n# 接下来 放一个列表试试\n>>> data = ['python','C','中国加油',52.0,(2020,2,26)]\t\t    \n>>> code1,code2,num1,num2,data1=data\t\t    \n>>> code1\t\t    \n'python'\n>>> code2\t\t    \n'C'\n>>> num1\t\t    \n'中国加油'\n>>> num2\t\t\t    \n52.0\n>>> data1\t\t    \n(2020, 2, 26)\n```\n\n**讨论**\n\n上面展示了都是序列元素和元素一样的情况，那如果只需要其中的一部分元素 应该怎么去做，\n\n文章中提供了一种方法是使用任意变量名占位，之后丢掉就好，\n\n还可以通过下标来输入某个元素 也可以达到解压一部分的目的。\n\n## 1.2 解压可迭代对象赋值给多个变量\n\n**问题**\n\n如果一个可迭代对象的元素个数超过变量个数时，会抛出一个 `ValueError` 。 那么怎样才能从这个可迭代对象中解压出 N 个元素出来？\n\n**解决方案**\n\n**容器**: 把多个元素组织在一起的数据结构，当它可以用来询问某个元素是否包含在其中时，就可以理解为这是一个容器\n\n**迭代对象**：很多容器都是可迭代对象，但凡是可以返回一个迭代器的对象都可称之为可迭代对象\n\n**迭代器**： 它是一种带状态的对象，通过`next()`方法调用返回容器的下一个值，迭代器就是工厂模式的对象。\n\n**生成器**： 生成器是一种特殊的迭代器，生成器可以用更少的中间变量些流式代码，此外，相比于其他容器，它能更节省内存和`cpu`，没有返回值，通过`yield`来返回\n\n解决问题\n\n```\n# 解决可迭代对象的元素超过变量个数 ，可以用 * 来解决问题\n>>> record = ('xss','sql','upload','xxe','download')      \n>>> first,*middle,last = record      \n>>> first\t      \n'xss'\n>>> middle      \n['sql', 'upload', 'xxe']\n>>> last      \n'download'\n# middle 永远都是列表类型，元素为空也是如此， 并且 * 表达式 可以用在任何位置。\n```\n\n扩展的迭代语法是为了解压不确定个数或者任意个数的元素的可迭代对象设计的，通常可迭代对象都是有一定规律的， 有时 `*`表达式也可以用来做字符串的分割，\n\n```\n>>> line = 'nobody:*:-2:-2:Unprivileged User:/var/empty:/usr/bin/false'\n>>> uname, *fields, homedir, sh = line.split(':')\n>>> uname\n'nobody'\n>>> homedir\n'/var/empty'\n>>> sh\n'/usr/bin/false'\n>>>\n```\n\n当然，如果你想要的解压一些元素并丢弃他们，你可以用`*_`这样来表示废弃\n\n\n\n\n\n未完待续 ...\n\n\n\n\n\n---\n\n参考链接：\n\nhttps://foofish.net/iterators-vs-generators.html\n\nhttps://python3-cookbook.readthedocs.io/zh_CN/latest/c01/p02_unpack_elements_from_iterables.html\n\n","tags":["python"],"categories":["Code"]},{"title":"python 入门简介","url":"/2020/02/26/编程/python/python介绍/","content":"\n# python 简介\n\n\n\n为了完成毕设 努力学习python\n\n\n\n* python 是一种解释型语言\n* pyhton 是交互式语言\n* python是面向对象语言\n* python是初学者语言 很简单\n\n\n\n## 0x01 python区分\n\n只要有python2 和python3 之分\n\n\n\n## 0x02 python的特点\n\n这就不提了 全是优点\n\npython大法好\n\n## 0x03 python 变量类型\n\n### 字符串\n\n一般由数字、字母、下划线组成\n\n```\nstr = 'xxxx'\n```\n\n**方法**\n\n\n\n## 列表\n\n支持字符、数字、字符串 甚至可以包含列表（嵌套）\n\n```\nlist = [ 'runoob', 786 , 2.23, 'john', 70.2 ]\ntinylist = [123, 'john']\n```\n\npython中支持数据类型和类型的`连接`和`重复`操作\n\n## 元组\n\n元组用`()`标识，内部元素用逗号隔开。但是元组不能二次赋值，\n\n元组不能通过修改\n\n```\ntuple = ( 'runoob', 786 , 2.23, 'john', 70.2 )\ntinytuple = (123, 'john')\n```\n\n## 字典\n\n字典也是经常要使用的数据类型之一，和列表相比，列表是有序的对象集合，字典是无需的对象集合，列表是通过偏移存取，而字典是通过键来存取的\n\n```\ndict = {}\ndict['one'] = \"This is one\"\ndict[2] = \"This is two\"\n \ntinydict = {'name': 'john','code':6734, 'dept': 'sales'}\n```\n\n\n\n\n\n# PythonTip \n\n## 每日一练\n\n**结尾为0的个数**\n\n```\n给你一个正整数列表 L, 输出L内所有数字的乘积末尾0的个数。(提示:不要直接相乘,数字很多,相乘得到的结果可能会很大)。例如： L=[2,8,3,50],则输出：2\n```\n\n我拿到题第以想法就是乘，但无疑会增加算法的时间复杂度，所以，接下来就是分析如何更加简洁的利用\n\n需要的是末尾0的个数，而数字中任何可以得到末尾为0的个数的值都可以化为2x5x某个值\n\n所以接下来只要对每一位数字化一下是否可以通过2或者 5 得到\n\n最后求一下2和5分别有多少个，取最小的那个就可以了 因为2和5都是素数，所以不存在取得的数重复现象\n\n总结一下：求每一个数可以得到几个2和几个5\n\n```\nL =[2,8,3,50]\n\ncount_2 ,count_5= 0,0\n\ndef count_2_5(i,n):\n    num = 0\n    while i % n == 0:\n        i  = i / 2\n        num += 1\n    return num\n\nfor i in L:\n    count_2 += count_2_5(i,2)\n    count_5 += count_2_5(i,5)\n\nprint(min(count_2,count_5))\n```\n\n\n\n\n\n\n\n","tags":["python"],"categories":["Code"]},{"title":"android 安全之环境搭建（一）","url":"/2020/02/05/逆向/android学习之环境搭建/","content":"\n[TOC]\n\n# android 安全（一）\n\n简单的学习做笔记\n\nandroid 现在基本都是以逆向脱壳为主，为了能够更加了解渗透测试，特地学习了一下逆向的基础知识。\n\n# 0x00 环境搭建\n\n不论从事那一方面的研究，第一件事都是搭建一个满意的环境，不然满是bug的环境会让你望而却步。\n\n**硬件要求**\n\n逆向需要的环境对系统要求不高，我自己是个游戏本，完全满足要求，就不需要在硬件上破费了。你只需要一个功能齐全的电脑都可以满足基本的学习要求。\n\n## 必备的一些软件安装\n\n推荐一个android下载站： https://www.androiddevtools.cn/#\n\n1. `jdk` ：这是android开发必备环境之一，由于一些软件限制，我准备的是`jdk-8u121-windows-x64`和`jdk-8u121-windows-i586`,当然也可以下载最新的，但有时会在安装某个软件的时候出现莫名其妙的问题。\n\n2. `android sdk`: （由于已经没有了单独的下载包，所以可以通过下载包含有android sdk 的android studio: 另一种是网上提供下载的链接，这个倒是蛮多的  下载链接：[android studio](https://developer.android.com/studio)）\n\n> 这里说一下android sdk 和android studio的区别\n>\n> Android SDK 是一个开发包。类似于JAVA SDK。里面包含了Android开发的各式各样的库文件。\n> Android studio是一个IDE（可视化开发工具）跟eclipse一样的东西。用来开发Android的工具。(studio 包含有sdk)\n\n3. `android NDK`:`Android NDK` 是一个工具集，可让您使用 C 和 C++ 等语言以原生代码实现应用的各个部分。对于特定类型的应用，这可以帮助您重复使用以这些语言编写的代码库[NDK](https://developer.android.com/ndk/downloads)   之后将ndk 安装的路径添加到`path` 环境变量中即可\n\n4. 开发环境安装 ，这里我安装的是`android studio` 因为`eclipse for Android Developers ` 已经不在维护了。\n\n   \n\n---\n\n刚开始学逆向，好多东西都是一知半解，如果有什么问题或者错误， 还望各位大佬狠狠的批评。","tags":["逆向"],"categories":["Reverse"]}]